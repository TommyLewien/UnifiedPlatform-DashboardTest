// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GeneralInformation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Discom.UP.DataContracts.Results.GeneralInformation {

  /// <summary>Holder for reflection information generated from GeneralInformation.proto</summary>
  public static partial class GeneralInformationReflection {

    #region Descriptor
    /// <summary>File descriptor for GeneralInformation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GeneralInformationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhHZW5lcmFsSW5mb3JtYXRpb24ucHJvdG8SMkRpc2NvbS5VUC5EYXRhQ29u",
            "dHJhY3RzLlJlc3VsdHMuR2VuZXJhbEluZm9ybWF0aW9uGgliY2wucHJvdG8i",
            "8QMKEkdlbmVyYWxJbmZvcm1hdGlvbhImCg9NZWFzdXJlbWVudFRpbWUYASAB",
            "KAsyDS5iY2wuRGF0ZVRpbWUSDgoGU2VyaWFsGAIgASgJEgwKBFR5cGUYAyAB",
            "KAkSEAoIQmFzZVR5cGUYBCABKAkSDQoFQmVuY2gYBSABKAkSDgoGUmVzdWx0",
            "GAYgASgJEhAKCFJlc3VsdElkGAcgASgFEhQKDFRlc3RQcm9wZXJ0eRgIIAEo",
            "CRIQCghUZXN0S2luZBgJIAEoCRIPCgdPcmRpbmFsGAogASgFEhAKCFRoaXNM",
            "YXN0GAsgASgIEg8KB1BrSWRlbnQYDCABKAUSEwoLU3RvcmFnZVBhdGgYDSAB",
            "KAkSEAoIRmlsZU5hbWUYDiABKAkSEAoIRmlsZVBhdGgYDyABKAkSEgoKRmls",
            "ZU9mZnNldBgQIAEoBRJyCg5BZGRpdGlvbmFsSW5mbxgRIAMoCzJaLkRpc2Nv",
            "bS5VUC5EYXRhQ29udHJhY3RzLlJlc3VsdHMuR2VuZXJhbEluZm9ybWF0aW9u",
            "LkdlbmVyYWxJbmZvcm1hdGlvbi5BZGRpdGlvbmFsSW5mb0VudHJ5GjUKE0Fk",
            "ZGl0aW9uYWxJbmZvRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJ",
            "OgI4ASJwChdMaXN0X0dlbmVyYWxJbmZvcm1hdGlvbhJVCgVpdGVtcxgBIAMo",
            "CzJGLkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLlJlc3VsdHMuR2VuZXJhbElu",
            "Zm9ybWF0aW9uLkdlbmVyYWxJbmZvcm1hdGlvbkI1qgIyRGlzY29tLlVQLkRh",
            "dGFDb250cmFjdHMuUmVzdWx0cy5HZW5lcmFsSW5mb3JtYXRpb25iBnByb3Rv",
            "Mw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Discom.UP.DataContracts.Results.ProtoBuf.Bcl.BclReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Results.GeneralInformation.GeneralInformation), global::Discom.UP.DataContracts.Results.GeneralInformation.GeneralInformation.Parser, new[]{ "MeasurementTime", "Serial", "Type", "BaseType", "Bench", "Result", "ResultId", "TestProperty", "TestKind", "Ordinal", "ThisLast", "PkIdent", "StoragePath", "FileName", "FilePath", "FileOffset", "AdditionalInfo" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Results.GeneralInformation.List_GeneralInformation), global::Discom.UP.DataContracts.Results.GeneralInformation.List_GeneralInformation.Parser, new[]{ "Items" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GeneralInformation : pb::IMessage<GeneralInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GeneralInformation> _parser = new pb::MessageParser<GeneralInformation>(() => new GeneralInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GeneralInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Results.GeneralInformation.GeneralInformationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeneralInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeneralInformation(GeneralInformation other) : this() {
      measurementTime_ = other.measurementTime_ != null ? other.measurementTime_.Clone() : null;
      serial_ = other.serial_;
      type_ = other.type_;
      baseType_ = other.baseType_;
      bench_ = other.bench_;
      result_ = other.result_;
      resultId_ = other.resultId_;
      testProperty_ = other.testProperty_;
      testKind_ = other.testKind_;
      ordinal_ = other.ordinal_;
      thisLast_ = other.thisLast_;
      pkIdent_ = other.pkIdent_;
      storagePath_ = other.storagePath_;
      fileName_ = other.fileName_;
      filePath_ = other.filePath_;
      fileOffset_ = other.fileOffset_;
      additionalInfo_ = other.additionalInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeneralInformation Clone() {
      return new GeneralInformation(this);
    }

    /// <summary>Field number for the "MeasurementTime" field.</summary>
    public const int MeasurementTimeFieldNumber = 1;
    private global::Discom.UP.DataContracts.Results.ProtoBuf.Bcl.DateTime measurementTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Results.ProtoBuf.Bcl.DateTime MeasurementTime {
      get { return measurementTime_; }
      set {
        measurementTime_ = value;
      }
    }

    /// <summary>Field number for the "Serial" field.</summary>
    public const int SerialFieldNumber = 2;
    private string serial_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Serial {
      get { return serial_; }
      set {
        serial_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 3;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BaseType" field.</summary>
    public const int BaseTypeFieldNumber = 4;
    private string baseType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseType {
      get { return baseType_; }
      set {
        baseType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Bench" field.</summary>
    public const int BenchFieldNumber = 5;
    private string bench_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bench {
      get { return bench_; }
      set {
        bench_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 6;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResultId" field.</summary>
    public const int ResultIdFieldNumber = 7;
    private int resultId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ResultId {
      get { return resultId_; }
      set {
        resultId_ = value;
      }
    }

    /// <summary>Field number for the "TestProperty" field.</summary>
    public const int TestPropertyFieldNumber = 8;
    private string testProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TestProperty {
      get { return testProperty_; }
      set {
        testProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TestKind" field.</summary>
    public const int TestKindFieldNumber = 9;
    private string testKind_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TestKind {
      get { return testKind_; }
      set {
        testKind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ordinal" field.</summary>
    public const int OrdinalFieldNumber = 10;
    private int ordinal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ordinal {
      get { return ordinal_; }
      set {
        ordinal_ = value;
      }
    }

    /// <summary>Field number for the "ThisLast" field.</summary>
    public const int ThisLastFieldNumber = 11;
    private bool thisLast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ThisLast {
      get { return thisLast_; }
      set {
        thisLast_ = value;
      }
    }

    /// <summary>Field number for the "PkIdent" field.</summary>
    public const int PkIdentFieldNumber = 12;
    private int pkIdent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PkIdent {
      get { return pkIdent_; }
      set {
        pkIdent_ = value;
      }
    }

    /// <summary>Field number for the "StoragePath" field.</summary>
    public const int StoragePathFieldNumber = 13;
    private string storagePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StoragePath {
      get { return storagePath_; }
      set {
        storagePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FileName" field.</summary>
    public const int FileNameFieldNumber = 14;
    private string fileName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FilePath" field.</summary>
    public const int FilePathFieldNumber = 15;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FileOffset" field.</summary>
    public const int FileOffsetFieldNumber = 16;
    private int fileOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FileOffset {
      get { return fileOffset_; }
      set {
        fileOffset_ = value;
      }
    }

    /// <summary>Field number for the "AdditionalInfo" field.</summary>
    public const int AdditionalInfoFieldNumber = 17;
    private static readonly pbc::MapField<string, string>.Codec _map_additionalInfo_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 138);
    private readonly pbc::MapField<string, string> additionalInfo_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> AdditionalInfo {
      get { return additionalInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GeneralInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GeneralInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MeasurementTime, other.MeasurementTime)) return false;
      if (Serial != other.Serial) return false;
      if (Type != other.Type) return false;
      if (BaseType != other.BaseType) return false;
      if (Bench != other.Bench) return false;
      if (Result != other.Result) return false;
      if (ResultId != other.ResultId) return false;
      if (TestProperty != other.TestProperty) return false;
      if (TestKind != other.TestKind) return false;
      if (Ordinal != other.Ordinal) return false;
      if (ThisLast != other.ThisLast) return false;
      if (PkIdent != other.PkIdent) return false;
      if (StoragePath != other.StoragePath) return false;
      if (FileName != other.FileName) return false;
      if (FilePath != other.FilePath) return false;
      if (FileOffset != other.FileOffset) return false;
      if (!AdditionalInfo.Equals(other.AdditionalInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (measurementTime_ != null) hash ^= MeasurementTime.GetHashCode();
      if (Serial.Length != 0) hash ^= Serial.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (BaseType.Length != 0) hash ^= BaseType.GetHashCode();
      if (Bench.Length != 0) hash ^= Bench.GetHashCode();
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (ResultId != 0) hash ^= ResultId.GetHashCode();
      if (TestProperty.Length != 0) hash ^= TestProperty.GetHashCode();
      if (TestKind.Length != 0) hash ^= TestKind.GetHashCode();
      if (Ordinal != 0) hash ^= Ordinal.GetHashCode();
      if (ThisLast != false) hash ^= ThisLast.GetHashCode();
      if (PkIdent != 0) hash ^= PkIdent.GetHashCode();
      if (StoragePath.Length != 0) hash ^= StoragePath.GetHashCode();
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (FileOffset != 0) hash ^= FileOffset.GetHashCode();
      hash ^= AdditionalInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (measurementTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MeasurementTime);
      }
      if (Serial.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Serial);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      if (BaseType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BaseType);
      }
      if (Bench.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bench);
      }
      if (Result.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Result);
      }
      if (ResultId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ResultId);
      }
      if (TestProperty.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TestProperty);
      }
      if (TestKind.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TestKind);
      }
      if (Ordinal != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Ordinal);
      }
      if (ThisLast != false) {
        output.WriteRawTag(88);
        output.WriteBool(ThisLast);
      }
      if (PkIdent != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PkIdent);
      }
      if (StoragePath.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(StoragePath);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(FileName);
      }
      if (FilePath.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(FilePath);
      }
      if (FileOffset != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(FileOffset);
      }
      additionalInfo_.WriteTo(output, _map_additionalInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (measurementTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MeasurementTime);
      }
      if (Serial.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Serial);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      if (BaseType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BaseType);
      }
      if (Bench.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bench);
      }
      if (Result.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Result);
      }
      if (ResultId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ResultId);
      }
      if (TestProperty.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TestProperty);
      }
      if (TestKind.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TestKind);
      }
      if (Ordinal != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Ordinal);
      }
      if (ThisLast != false) {
        output.WriteRawTag(88);
        output.WriteBool(ThisLast);
      }
      if (PkIdent != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PkIdent);
      }
      if (StoragePath.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(StoragePath);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(FileName);
      }
      if (FilePath.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(FilePath);
      }
      if (FileOffset != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(FileOffset);
      }
      additionalInfo_.WriteTo(ref output, _map_additionalInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (measurementTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeasurementTime);
      }
      if (Serial.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Serial);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (BaseType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseType);
      }
      if (Bench.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bench);
      }
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (ResultId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultId);
      }
      if (TestProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestProperty);
      }
      if (TestKind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestKind);
      }
      if (Ordinal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ordinal);
      }
      if (ThisLast != false) {
        size += 1 + 1;
      }
      if (PkIdent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PkIdent);
      }
      if (StoragePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoragePath);
      }
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (FileOffset != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FileOffset);
      }
      size += additionalInfo_.CalculateSize(_map_additionalInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GeneralInformation other) {
      if (other == null) {
        return;
      }
      if (other.measurementTime_ != null) {
        if (measurementTime_ == null) {
          MeasurementTime = new global::Discom.UP.DataContracts.Results.ProtoBuf.Bcl.DateTime();
        }
        MeasurementTime.MergeFrom(other.MeasurementTime);
      }
      if (other.Serial.Length != 0) {
        Serial = other.Serial;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.BaseType.Length != 0) {
        BaseType = other.BaseType;
      }
      if (other.Bench.Length != 0) {
        Bench = other.Bench;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      if (other.ResultId != 0) {
        ResultId = other.ResultId;
      }
      if (other.TestProperty.Length != 0) {
        TestProperty = other.TestProperty;
      }
      if (other.TestKind.Length != 0) {
        TestKind = other.TestKind;
      }
      if (other.Ordinal != 0) {
        Ordinal = other.Ordinal;
      }
      if (other.ThisLast != false) {
        ThisLast = other.ThisLast;
      }
      if (other.PkIdent != 0) {
        PkIdent = other.PkIdent;
      }
      if (other.StoragePath.Length != 0) {
        StoragePath = other.StoragePath;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.FileOffset != 0) {
        FileOffset = other.FileOffset;
      }
      additionalInfo_.Add(other.additionalInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (measurementTime_ == null) {
              MeasurementTime = new global::Discom.UP.DataContracts.Results.ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(MeasurementTime);
            break;
          }
          case 18: {
            Serial = input.ReadString();
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 34: {
            BaseType = input.ReadString();
            break;
          }
          case 42: {
            Bench = input.ReadString();
            break;
          }
          case 50: {
            Result = input.ReadString();
            break;
          }
          case 56: {
            ResultId = input.ReadInt32();
            break;
          }
          case 66: {
            TestProperty = input.ReadString();
            break;
          }
          case 74: {
            TestKind = input.ReadString();
            break;
          }
          case 80: {
            Ordinal = input.ReadInt32();
            break;
          }
          case 88: {
            ThisLast = input.ReadBool();
            break;
          }
          case 96: {
            PkIdent = input.ReadInt32();
            break;
          }
          case 106: {
            StoragePath = input.ReadString();
            break;
          }
          case 114: {
            FileName = input.ReadString();
            break;
          }
          case 122: {
            FilePath = input.ReadString();
            break;
          }
          case 128: {
            FileOffset = input.ReadInt32();
            break;
          }
          case 138: {
            additionalInfo_.AddEntriesFrom(input, _map_additionalInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (measurementTime_ == null) {
              MeasurementTime = new global::Discom.UP.DataContracts.Results.ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(MeasurementTime);
            break;
          }
          case 18: {
            Serial = input.ReadString();
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 34: {
            BaseType = input.ReadString();
            break;
          }
          case 42: {
            Bench = input.ReadString();
            break;
          }
          case 50: {
            Result = input.ReadString();
            break;
          }
          case 56: {
            ResultId = input.ReadInt32();
            break;
          }
          case 66: {
            TestProperty = input.ReadString();
            break;
          }
          case 74: {
            TestKind = input.ReadString();
            break;
          }
          case 80: {
            Ordinal = input.ReadInt32();
            break;
          }
          case 88: {
            ThisLast = input.ReadBool();
            break;
          }
          case 96: {
            PkIdent = input.ReadInt32();
            break;
          }
          case 106: {
            StoragePath = input.ReadString();
            break;
          }
          case 114: {
            FileName = input.ReadString();
            break;
          }
          case 122: {
            FilePath = input.ReadString();
            break;
          }
          case 128: {
            FileOffset = input.ReadInt32();
            break;
          }
          case 138: {
            additionalInfo_.AddEntriesFrom(ref input, _map_additionalInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class List_GeneralInformation : pb::IMessage<List_GeneralInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<List_GeneralInformation> _parser = new pb::MessageParser<List_GeneralInformation>(() => new List_GeneralInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<List_GeneralInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Results.GeneralInformation.GeneralInformationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public List_GeneralInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public List_GeneralInformation(List_GeneralInformation other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public List_GeneralInformation Clone() {
      return new List_GeneralInformation(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Results.GeneralInformation.GeneralInformation> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Discom.UP.DataContracts.Results.GeneralInformation.GeneralInformation.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Results.GeneralInformation.GeneralInformation> items_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Results.GeneralInformation.GeneralInformation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Results.GeneralInformation.GeneralInformation> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as List_GeneralInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(List_GeneralInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(List_GeneralInformation other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
