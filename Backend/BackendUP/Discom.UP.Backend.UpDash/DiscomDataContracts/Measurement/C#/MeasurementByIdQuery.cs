// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: MeasurementByIdQuery .proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Discom.UP.DataContracts.Measurement.MeasurementByIdQuery {

  /// <summary>Holder for reflection information generated from MeasurementByIdQuery .proto</summary>
  public static partial class MeasurementByIdQueryReflection {

    #region Descriptor
    /// <summary>File descriptor for MeasurementByIdQuery .proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MeasurementByIdQueryReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtNZWFzdXJlbWVudEJ5SWRRdWVyeSAucHJvdG8SOERpc2NvbS5VUC5EYXRh",
            "Q29udHJhY3RzLk1lYXN1cmVtZW50Lk1lYXN1cmVtZW50QnlJZFF1ZXJ5InoK",
            "BkNsYXZpcxIMCgRNb2RlGAEgASgJEhIKCkluc3RydW1lbnQYAiABKAkSDwoH",
            "Q2hhbm5lbBgDIAEoCRIQCghMb2NhdGlvbhgEIAEoCRIbChNJbnN0cnVtZW50",
            "UGFyYW1ldGVyGAUgASgJEg4KBlNlbnNvchgGIAEoCSJwCgxDbGF2aXNGaWx0",
            "ZXISTwoFSXRlbXMYASADKAsyQC5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5N",
            "ZWFzdXJlbWVudC5NZWFzdXJlbWVudEJ5SWRRdWVyeS5DbGF2aXMSDwoHSW5j",
            "bHVkZRgCIAEoCCKlAQoUTWVhc3VyZW1lbnRCeUlkUXVlcnkSDwoHRmFjdG9y",
            "eRgBIAEoCRIMCgRMaW5lGAIgASgJEhYKCklkZW50aWZpZXIYAyADKAVCAhAA",
            "ElYKBkNsYXZpcxgEIAEoCzJGLkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1l",
            "YXN1cmVtZW50Lk1lYXN1cmVtZW50QnlJZFF1ZXJ5LkNsYXZpc0ZpbHRlckI7",
            "qgI4RGlzY29tLlVQLkRhdGFDb250cmFjdHMuTWVhc3VyZW1lbnQuTWVhc3Vy",
            "ZW1lbnRCeUlkUXVlcnliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.Clavis), global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.Clavis.Parser, new[]{ "Mode", "Instrument", "Channel", "Location", "InstrumentParameter", "Sensor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.ClavisFilter), global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.ClavisFilter.Parser, new[]{ "Items", "Include" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.MeasurementByIdQuery), global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.MeasurementByIdQuery.Parser, new[]{ "Factory", "Line", "Identifier", "Clavis" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Clavis : pb::IMessage<Clavis>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Clavis> _parser = new pb::MessageParser<Clavis>(() => new Clavis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Clavis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.MeasurementByIdQueryReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Clavis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Clavis(Clavis other) : this() {
      mode_ = other.mode_;
      instrument_ = other.instrument_;
      channel_ = other.channel_;
      location_ = other.location_;
      instrumentParameter_ = other.instrumentParameter_;
      sensor_ = other.sensor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Clavis Clone() {
      return new Clavis(this);
    }

    /// <summary>Field number for the "Mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private string mode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Mode {
      get { return mode_; }
      set {
        mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Instrument" field.</summary>
    public const int InstrumentFieldNumber = 2;
    private string instrument_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Instrument {
      get { return instrument_; }
      set {
        instrument_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Location" field.</summary>
    public const int LocationFieldNumber = 4;
    private string location_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "InstrumentParameter" field.</summary>
    public const int InstrumentParameterFieldNumber = 5;
    private string instrumentParameter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentParameter {
      get { return instrumentParameter_; }
      set {
        instrumentParameter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sensor" field.</summary>
    public const int SensorFieldNumber = 6;
    private string sensor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sensor {
      get { return sensor_; }
      set {
        sensor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Clavis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Clavis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      if (Instrument != other.Instrument) return false;
      if (Channel != other.Channel) return false;
      if (Location != other.Location) return false;
      if (InstrumentParameter != other.InstrumentParameter) return false;
      if (Sensor != other.Sensor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode.Length != 0) hash ^= Mode.GetHashCode();
      if (Instrument.Length != 0) hash ^= Instrument.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (InstrumentParameter.Length != 0) hash ^= InstrumentParameter.GetHashCode();
      if (Sensor.Length != 0) hash ^= Sensor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Mode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mode);
      }
      if (Instrument.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Instrument);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Location);
      }
      if (InstrumentParameter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InstrumentParameter);
      }
      if (Sensor.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Sensor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Mode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mode);
      }
      if (Instrument.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Instrument);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Location);
      }
      if (InstrumentParameter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InstrumentParameter);
      }
      if (Sensor.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Sensor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Mode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
      }
      if (Instrument.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instrument);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (InstrumentParameter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentParameter);
      }
      if (Sensor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sensor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Clavis other) {
      if (other == null) {
        return;
      }
      if (other.Mode.Length != 0) {
        Mode = other.Mode;
      }
      if (other.Instrument.Length != 0) {
        Instrument = other.Instrument;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.InstrumentParameter.Length != 0) {
        InstrumentParameter = other.InstrumentParameter;
      }
      if (other.Sensor.Length != 0) {
        Sensor = other.Sensor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Mode = input.ReadString();
            break;
          }
          case 18: {
            Instrument = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Location = input.ReadString();
            break;
          }
          case 42: {
            InstrumentParameter = input.ReadString();
            break;
          }
          case 50: {
            Sensor = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Mode = input.ReadString();
            break;
          }
          case 18: {
            Instrument = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Location = input.ReadString();
            break;
          }
          case 42: {
            InstrumentParameter = input.ReadString();
            break;
          }
          case 50: {
            Sensor = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ClavisFilter : pb::IMessage<ClavisFilter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ClavisFilter> _parser = new pb::MessageParser<ClavisFilter>(() => new ClavisFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ClavisFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.MeasurementByIdQueryReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClavisFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClavisFilter(ClavisFilter other) : this() {
      items_ = other.items_.Clone();
      include_ = other.include_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ClavisFilter Clone() {
      return new ClavisFilter(this);
    }

    /// <summary>Field number for the "Items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.Clavis> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.Clavis.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.Clavis> items_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.Clavis>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.Clavis> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "Include" field.</summary>
    public const int IncludeFieldNumber = 2;
    private bool include_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Include {
      get { return include_; }
      set {
        include_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ClavisFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ClavisFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if (Include != other.Include) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (Include != false) hash ^= Include.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (Include != false) {
        output.WriteRawTag(16);
        output.WriteBool(Include);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (Include != false) {
        output.WriteRawTag(16);
        output.WriteBool(Include);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (Include != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ClavisFilter other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      if (other.Include != false) {
        Include = other.Include;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 16: {
            Include = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 16: {
            Include = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MeasurementByIdQuery : pb::IMessage<MeasurementByIdQuery>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MeasurementByIdQuery> _parser = new pb::MessageParser<MeasurementByIdQuery>(() => new MeasurementByIdQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MeasurementByIdQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.MeasurementByIdQueryReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementByIdQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementByIdQuery(MeasurementByIdQuery other) : this() {
      factory_ = other.factory_;
      line_ = other.line_;
      identifier_ = other.identifier_.Clone();
      clavis_ = other.clavis_ != null ? other.clavis_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementByIdQuery Clone() {
      return new MeasurementByIdQuery(this);
    }

    /// <summary>Field number for the "Factory" field.</summary>
    public const int FactoryFieldNumber = 1;
    private string factory_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Factory {
      get { return factory_; }
      set {
        factory_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Line" field.</summary>
    public const int LineFieldNumber = 2;
    private string line_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Line {
      get { return line_; }
      set {
        line_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Identifier" field.</summary>
    public const int IdentifierFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_identifier_codec
        = pb::FieldCodec.ForInt32(24);
    private readonly pbc::RepeatedField<int> identifier_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> Identifier {
      get { return identifier_; }
    }

    /// <summary>Field number for the "Clavis" field.</summary>
    public const int ClavisFieldNumber = 4;
    private global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.ClavisFilter clavis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.ClavisFilter Clavis {
      get { return clavis_; }
      set {
        clavis_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MeasurementByIdQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MeasurementByIdQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Factory != other.Factory) return false;
      if (Line != other.Line) return false;
      if(!identifier_.Equals(other.identifier_)) return false;
      if (!object.Equals(Clavis, other.Clavis)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Factory.Length != 0) hash ^= Factory.GetHashCode();
      if (Line.Length != 0) hash ^= Line.GetHashCode();
      hash ^= identifier_.GetHashCode();
      if (clavis_ != null) hash ^= Clavis.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Factory.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Factory);
      }
      if (Line.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Line);
      }
      identifier_.WriteTo(output, _repeated_identifier_codec);
      if (clavis_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Clavis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Factory.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Factory);
      }
      if (Line.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Line);
      }
      identifier_.WriteTo(ref output, _repeated_identifier_codec);
      if (clavis_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Clavis);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Factory.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Factory);
      }
      if (Line.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Line);
      }
      size += identifier_.CalculateSize(_repeated_identifier_codec);
      if (clavis_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clavis);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MeasurementByIdQuery other) {
      if (other == null) {
        return;
      }
      if (other.Factory.Length != 0) {
        Factory = other.Factory;
      }
      if (other.Line.Length != 0) {
        Line = other.Line;
      }
      identifier_.Add(other.identifier_);
      if (other.clavis_ != null) {
        if (clavis_ == null) {
          Clavis = new global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.ClavisFilter();
        }
        Clavis.MergeFrom(other.Clavis);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Factory = input.ReadString();
            break;
          }
          case 18: {
            Line = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            identifier_.AddEntriesFrom(input, _repeated_identifier_codec);
            break;
          }
          case 34: {
            if (clavis_ == null) {
              Clavis = new global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.ClavisFilter();
            }
            input.ReadMessage(Clavis);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Factory = input.ReadString();
            break;
          }
          case 18: {
            Line = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            identifier_.AddEntriesFrom(ref input, _repeated_identifier_codec);
            break;
          }
          case 34: {
            if (clavis_ == null) {
              Clavis = new global::Discom.UP.DataContracts.Measurement.MeasurementByIdQuery.ClavisFilter();
            }
            input.ReadMessage(Clavis);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
