// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Measurement.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Discom.UP.DataContracts.Measurement.Measurement {

  /// <summary>Holder for reflection information generated from Measurement.proto</summary>
  public static partial class MeasurementReflection {

    #region Descriptor
    /// <summary>File descriptor for Measurement.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MeasurementReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFNZWFzdXJlbWVudC5wcm90bxIvRGlzY29tLlVQLkRhdGFDb250cmFjdHMu",
            "TWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQaCWJjbC5wcm90byI5CglBeGlzUmFu",
            "Z2USDQoFU3RhcnQYASABKAISDQoFRGVsdGEYAiABKAISDgoGTGVuZ3RoGAMg",
            "ASgNInoKBkNsYXZpcxIMCgRNb2RlGAEgASgJEhIKCkluc3RydW1lbnQYAiAB",
            "KAkSDwoHQ2hhbm5lbBgDIAEoCRIQCghMb2NhdGlvbhgEIAEoCRIbChNJbnN0",
            "cnVtZW50UGFyYW1ldGVyGAUgASgJEg4KBlNlbnNvchgGIAEoCSLNAQoGRGVm",
            "ZWN0EhEKCUVycm9yQ29kZRgBIAEoBRIRCglFcnJvclRleHQYAiABKAkSDwoH",
            "RXJyb3JOchgDIAEoBRITCgtFcnJvclJlc3VsdBgEIAEoBRJHCgZDbGF2aXMY",
            "BSABKAsyNy5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5N",
            "ZWFzdXJlbWVudC5DbGF2aXMSDQoFVmFsdWUYBiABKAISDQoFTGltaXQYByAB",
            "KAISEAoIUG9zaXRpb24YCCABKAIiWAoMRGVmZWN0UmVwb3J0EkgKB0RlZmVj",
            "dHMYASADKAsyNy5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVu",
            "dC5NZWFzdXJlbWVudC5EZWZlY3Qi7gMKEkdlbmVyYWxJbmZvcm1hdGlvbhIm",
            "Cg9NZWFzdXJlbWVudFRpbWUYASABKAsyDS5iY2wuRGF0ZVRpbWUSDgoGU2Vy",
            "aWFsGAIgASgJEgwKBFR5cGUYAyABKAkSEAoIQmFzZVR5cGUYBCABKAkSDQoF",
            "QmVuY2gYBSABKAkSDgoGUmVzdWx0GAYgASgJEhAKCFJlc3VsdElkGAcgASgF",
            "EhQKDFRlc3RQcm9wZXJ0eRgIIAEoCRIQCghUZXN0S2luZBgJIAEoCRIPCgdP",
            "cmRpbmFsGAogASgFEhAKCFRoaXNMYXN0GAsgASgIEg8KB1BrSWRlbnQYDCAB",
            "KAUSEwoLU3RvcmFnZVBhdGgYDSABKAkSEAoIRmlsZU5hbWUYDiABKAkSEAoI",
            "RmlsZVBhdGgYDyABKAkSEgoKRmlsZU9mZnNldBgQIAEoBRJvCg5BZGRpdGlv",
            "bmFsSW5mbxgRIAMoCzJXLkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1",
            "cmVtZW50Lk1lYXN1cmVtZW50LkdlbmVyYWxJbmZvcm1hdGlvbi5BZGRpdGlv",
            "bmFsSW5mb0VudHJ5GjUKE0FkZGl0aW9uYWxJbmZvRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJOgI4ASK+AQokS2V5VmFsdWVQYWlyX0NsYXZp",
            "c19NZWFzdXJlbWVudFZhbHVlEkQKA0tleRgBIAEoCzI3LkRpc2NvbS5VUC5E",
            "YXRhQ29udHJhY3RzLk1lYXN1cmVtZW50Lk1lYXN1cmVtZW50LkNsYXZpcxJQ",
            "CgVWYWx1ZRgCIAEoCzJBLkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1",
            "cmVtZW50Lk1lYXN1cmVtZW50Lk1lYXN1cmVtZW50VmFsdWUiuwEKJUtleVZh",
            "bHVlUGFpcl9MaW1pdF9MaXN0X01hdHJpeEVsZW1lbnQSQwoDS2V5GAEgASgL",
            "MjYuRGlzY29tLlVQLkRhdGFDb250cmFjdHMuTWVhc3VyZW1lbnQuTWVhc3Vy",
            "ZW1lbnQuTGltaXQSTQoFVmFsdWUYAiADKAsyPi5EaXNjb20uVVAuRGF0YUNv",
            "bnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5NYXRyaXhFbGVtZW50",
            "IsEBCihLZXlWYWx1ZVBhaXJfTGltaXRfTGlzdF9TY2FsYXJUcmFja1BvaW50",
            "EkMKA0tleRgBIAEoCzI2LkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1",
            "cmVtZW50Lk1lYXN1cmVtZW50LkxpbWl0ElAKBVZhbHVlGAIgAygLMkEuRGlz",
            "Y29tLlVQLkRhdGFDb250cmFjdHMuTWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQu",
            "U2NhbGFyVHJhY2tQb2ludCK3AQojS2V5VmFsdWVQYWlyX0xpbWl0X0xpc3Rf",
            "VmVjdG9yUG9pbnQSQwoDS2V5GAEgASgLMjYuRGlzY29tLlVQLkRhdGFDb250",
            "cmFjdHMuTWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQuTGltaXQSSwoFVmFsdWUY",
            "AiADKAsyPC5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5N",
            "ZWFzdXJlbWVudC5WZWN0b3JQb2ludCLFAQoqS2V5VmFsdWVQYWlyX0xpbWl0",
            "X0xpc3RfVmVjdG9yVHJhY2tFbGVtZW50EkMKA0tleRgBIAEoCzI2LkRpc2Nv",
            "bS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1cmVtZW50Lk1lYXN1cmVtZW50Lkxp",
            "bWl0ElIKBVZhbHVlGAIgAygLMkMuRGlzY29tLlVQLkRhdGFDb250cmFjdHMu",
            "TWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQuVmVjdG9yVHJhY2tFbGVtZW50Im8K",
            "GUtleVZhbHVlUGFpcl9MaW1pdF9TaW5nbGUSQwoDS2V5GAEgASgLMjYuRGlz",
            "Y29tLlVQLkRhdGFDb250cmFjdHMuTWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQu",
            "TGltaXQSDQoFVmFsdWUYAiABKAIiawoFTGltaXQSEwoLRGVzY3JpcHRpb24Y",
            "ASABKAkSTQoJTGltaXRUeXBlGAIgASgLMjouRGlzY29tLlVQLkRhdGFDb250",
            "cmFjdHMuTWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQuTGltaXRUeXBlIiUKCUxp",
            "bWl0VHlwZRIMCgROYW1lGAEgASgJEgoKAklkGAIgASgFIrIECgZNYXRyaXgS",
            "TgoGVmFsdWVzGAEgAygLMj4uRGlzY29tLlVQLkRhdGFDb250cmFjdHMuTWVh",
            "c3VyZW1lbnQuTWVhc3VyZW1lbnQuTWF0cml4RWxlbWVudBJECgVYVW5pdBgC",
            "IAEoCzI1LkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1cmVtZW50Lk1l",
            "YXN1cmVtZW50LlVuaXQSRAoFWVVuaXQYAyABKAsyNS5EaXNjb20uVVAuRGF0",
            "YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5Vbml0EkQKBVpV",
            "bml0GAQgASgLMjUuRGlzY29tLlVQLkRhdGFDb250cmFjdHMuTWVhc3VyZW1l",
            "bnQuTWVhc3VyZW1lbnQuVW5pdBJOCgpYQXhpc1JhbmdlGAUgASgLMjouRGlz",
            "Y29tLlVQLkRhdGFDb250cmFjdHMuTWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQu",
            "QXhpc1JhbmdlEk4KClpBeGlzUmFuZ2UYBiABKAsyOi5EaXNjb20uVVAuRGF0",
            "YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5BeGlzUmFuZ2US",
            "ZgoGTGltaXRzGAcgAygLMlYuRGlzY29tLlVQLkRhdGFDb250cmFjdHMuTWVh",
            "c3VyZW1lbnQuTWVhc3VyZW1lbnQuS2V5VmFsdWVQYWlyX0xpbWl0X0xpc3Rf",
            "TWF0cml4RWxlbWVudCJjCg1NYXRyaXhFbGVtZW50ElIKDFZlY3RvclBvaW50",
            "cxgBIAMoCzI8LkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1cmVtZW50",
            "Lk1lYXN1cmVtZW50LlZlY3RvclBvaW50IqACCgtNZWFzdXJlbWVudBJfChJH",
            "ZW5lcmFsSW5mb3JtYXRpb24YASABKAsyQy5EaXNjb20uVVAuRGF0YUNvbnRy",
            "YWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5HZW5lcmFsSW5mb3JtYXRp",
            "b24SWwoPTWVhc3VyZW1lbnREYXRhGAIgASgLMkIuRGlzY29tLlVQLkRhdGFD",
            "b250cmFjdHMuTWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQuTWVhc3VyZW1lbnRW",
            "YWx1ZXMSUwoMRGVmZWN0UmVwb3J0GAMgASgLMj0uRGlzY29tLlVQLkRhdGFD",
            "b250cmFjdHMuTWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQuRGVmZWN0UmVwb3J0",
            "Il8KEExpc3RfTWVhc3VyZW1lbnQSSwoFaXRlbXMYASADKAsyPC5EaXNjb20u",
            "VVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5NZWFz",
            "dXJlbWVudCKkAwoQTWVhc3VyZW1lbnRWYWx1ZRJHCgZTY2FsYXIYASABKAsy",
            "Ny5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJl",
            "bWVudC5TY2FsYXISUQoLU2NhbGFyVHJhY2sYAiABKAsyPC5EaXNjb20uVVAu",
            "RGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5TY2FsYXJU",
            "cmFjaxJHCgZWZWN0b3IYAyABKAsyNy5EaXNjb20uVVAuRGF0YUNvbnRyYWN0",
            "cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5WZWN0b3ISUQoLVmVjdG9yVHJh",
            "Y2sYBCABKAsyPC5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVu",
            "dC5NZWFzdXJlbWVudC5WZWN0b3JUcmFjaxJHCgZNYXRyaXgYBSABKAsyNy5E",
            "aXNjb20uVVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVu",
            "dC5NYXRyaXgSDwoHSW52YWxpZBhkIAEoCSJ6ChFNZWFzdXJlbWVudFZhbHVl",
            "cxJlCgZWYWx1ZXMYASADKAsyVS5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5N",
            "ZWFzdXJlbWVudC5NZWFzdXJlbWVudC5LZXlWYWx1ZVBhaXJfQ2xhdmlzX01l",
            "YXN1cmVtZW50VmFsdWUiXgoIUG9zaXRpb24SDQoFVmFsdWUYASABKAISQwoE",
            "VW5pdBgCIAEoCzI1LkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1cmVt",
            "ZW50Lk1lYXN1cmVtZW50LlVuaXQihQIKBlNjYWxhchINCgVWYWx1ZRgBIAEo",
            "AhJDCgRVbml0GAIgASgLMjUuRGlzY29tLlVQLkRhdGFDb250cmFjdHMuTWVh",
            "c3VyZW1lbnQuTWVhc3VyZW1lbnQuVW5pdBJLCghQb3NpdGlvbhgDIAEoCzI5",
            "LkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1cmVtZW50Lk1lYXN1cmVt",
            "ZW50LlBvc2l0aW9uEloKBkxpbWl0cxgEIAMoCzJKLkRpc2NvbS5VUC5EYXRh",
            "Q29udHJhY3RzLk1lYXN1cmVtZW50Lk1lYXN1cmVtZW50LktleVZhbHVlUGFp",
            "cl9MaW1pdF9TaW5nbGUi1wIKC1NjYWxhclRyYWNrElEKBlZhbHVlcxgBIAMo",
            "CzJBLkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1cmVtZW50Lk1lYXN1",
            "cmVtZW50LlNjYWxhclRyYWNrUG9pbnQSRAoFWFVuaXQYAiABKAsyNS5EaXNj",
            "b20uVVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5V",
            "bml0EkQKBVlVbml0GAMgASgLMjUuRGlzY29tLlVQLkRhdGFDb250cmFjdHMu",
            "TWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQuVW5pdBJpCgZMaW1pdHMYBCADKAsy",
            "WS5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJl",
            "bWVudC5LZXlWYWx1ZVBhaXJfTGltaXRfTGlzdF9TY2FsYXJUcmFja1BvaW50",
            "IigKEFNjYWxhclRyYWNrUG9pbnQSCQoBWBgBIAEoAhIJCgFZGAIgASgCIiEK",
            "BVNjYWxlEgwKBE5hbWUYASABKAkSCgoCSWQYAiABKAUiwwEKBFVuaXQSQwoC",
            "SWQYASABKAsyNy5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVu",
            "dC5NZWFzdXJlbWVudC5Vbml0SWQSEAoIRXhwb25lbnQYAiABKAUSDQoFUG93",
            "ZXIYAyABKAUSRQoFU2NhbGUYBCABKAsyNi5EaXNjb20uVVAuRGF0YUNvbnRy",
            "YWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5TY2FsZRIOCgZMb2dSZWYY",
            "BSABKAIiIgoGVW5pdElkEgwKBE5hbWUYASABKAkSCgoCSWQYAiABKAUimAMK",
            "BlZlY3RvchJMCgZWYWx1ZXMYASADKAsyPC5EaXNjb20uVVAuRGF0YUNvbnRy",
            "YWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5WZWN0b3JQb2ludBJECgVY",
            "VW5pdBgCIAEoCzI1LkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1cmVt",
            "ZW50Lk1lYXN1cmVtZW50LlVuaXQSRAoFWVVuaXQYAyABKAsyNS5EaXNjb20u",
            "VVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5Vbml0",
            "Ek4KClhBeGlzUmFuZ2UYBCABKAsyOi5EaXNjb20uVVAuRGF0YUNvbnRyYWN0",
            "cy5NZWFzdXJlbWVudC5NZWFzdXJlbWVudC5BeGlzUmFuZ2USZAoGTGltaXRz",
            "GAUgAygLMlQuRGlzY29tLlVQLkRhdGFDb250cmFjdHMuTWVhc3VyZW1lbnQu",
            "TWVhc3VyZW1lbnQuS2V5VmFsdWVQYWlyX0xpbWl0X0xpc3RfVmVjdG9yUG9p",
            "bnQiGAoLVmVjdG9yUG9pbnQSCQoBWRgBIAEoAiLxAwoLVmVjdG9yVHJhY2sS",
            "UwoGVmFsdWVzGAEgAygLMkMuRGlzY29tLlVQLkRhdGFDb250cmFjdHMuTWVh",
            "c3VyZW1lbnQuTWVhc3VyZW1lbnQuVmVjdG9yVHJhY2tFbGVtZW50EkQKBVhV",
            "bml0GAIgASgLMjUuRGlzY29tLlVQLkRhdGFDb250cmFjdHMuTWVhc3VyZW1l",
            "bnQuTWVhc3VyZW1lbnQuVW5pdBJECgVZVW5pdBgDIAEoCzI1LkRpc2NvbS5V",
            "UC5EYXRhQ29udHJhY3RzLk1lYXN1cmVtZW50Lk1lYXN1cmVtZW50LlVuaXQS",
            "RAoFWlVuaXQYBCABKAsyNS5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5NZWFz",
            "dXJlbWVudC5NZWFzdXJlbWVudC5Vbml0Ek4KClhBeGlzUmFuZ2UYBSABKAsy",
            "Oi5EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5NZWFzdXJlbWVudC5NZWFzdXJl",
            "bWVudC5BeGlzUmFuZ2USawoGTGltaXRzGAYgAygLMlsuRGlzY29tLlVQLkRh",
            "dGFDb250cmFjdHMuTWVhc3VyZW1lbnQuTWVhc3VyZW1lbnQuS2V5VmFsdWVQ",
            "YWlyX0xpbWl0X0xpc3RfVmVjdG9yVHJhY2tFbGVtZW50InMKElZlY3RvclRy",
            "YWNrRWxlbWVudBIJCgFaGAEgASgCElIKDFZlY3RvclBvaW50cxgCIAMoCzI8",
            "LkRpc2NvbS5VUC5EYXRhQ29udHJhY3RzLk1lYXN1cmVtZW50Lk1lYXN1cmVt",
            "ZW50LlZlY3RvclBvaW50QjKqAi9EaXNjb20uVVAuRGF0YUNvbnRyYWN0cy5N",
            "ZWFzdXJlbWVudC5NZWFzdXJlbWVudGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Discom.UP.DataContracts.Measurement.ProtoBuf.Bcl.BclReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange), global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange.Parser, new[]{ "Start", "Delta", "Length" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.Clavis), global::Discom.UP.DataContracts.Measurement.Measurement.Clavis.Parser, new[]{ "Mode", "Instrument", "Channel", "Location", "InstrumentParameter", "Sensor" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.Defect), global::Discom.UP.DataContracts.Measurement.Measurement.Defect.Parser, new[]{ "ErrorCode", "ErrorText", "ErrorNr", "ErrorResult", "Clavis", "Value", "Limit", "Position" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.DefectReport), global::Discom.UP.DataContracts.Measurement.Measurement.DefectReport.Parser, new[]{ "Defects" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.GeneralInformation), global::Discom.UP.DataContracts.Measurement.Measurement.GeneralInformation.Parser, new[]{ "MeasurementTime", "Serial", "Type", "BaseType", "Bench", "Result", "ResultId", "TestProperty", "TestKind", "Ordinal", "ThisLast", "PkIdent", "StoragePath", "FileName", "FilePath", "FileOffset", "AdditionalInfo" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Clavis_MeasurementValue), global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Clavis_MeasurementValue.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_MatrixElement), global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_MatrixElement.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_ScalarTrackPoint), global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_ScalarTrackPoint.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorPoint), global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorPoint.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorTrackElement), global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorTrackElement.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_Single), global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_Single.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.Limit), global::Discom.UP.DataContracts.Measurement.Measurement.Limit.Parser, new[]{ "Description", "LimitType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.LimitType), global::Discom.UP.DataContracts.Measurement.Measurement.LimitType.Parser, new[]{ "Name", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.Matrix), global::Discom.UP.DataContracts.Measurement.Measurement.Matrix.Parser, new[]{ "Values", "XUnit", "YUnit", "ZUnit", "XAxisRange", "ZAxisRange", "Limits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement), global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement.Parser, new[]{ "VectorPoints" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.Measurement), global::Discom.UP.DataContracts.Measurement.Measurement.Measurement.Parser, new[]{ "GeneralInformation", "MeasurementData", "DefectReport" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.List_Measurement), global::Discom.UP.DataContracts.Measurement.Measurement.List_Measurement.Parser, new[]{ "Items" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValue), global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValue.Parser, new[]{ "Scalar", "ScalarTrack", "Vector", "VectorTrack", "Matrix", "Invalid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValues), global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValues.Parser, new[]{ "Values" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.Position), global::Discom.UP.DataContracts.Measurement.Measurement.Position.Parser, new[]{ "Value", "Unit" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.Scalar), global::Discom.UP.DataContracts.Measurement.Measurement.Scalar.Parser, new[]{ "Value", "Unit", "Position", "Limits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrack), global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrack.Parser, new[]{ "Values", "XUnit", "YUnit", "Limits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint), global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint.Parser, new[]{ "X", "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.Scale), global::Discom.UP.DataContracts.Measurement.Measurement.Scale.Parser, new[]{ "Name", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.Unit), global::Discom.UP.DataContracts.Measurement.Measurement.Unit.Parser, new[]{ "Id", "Exponent", "Power", "Scale", "LogRef" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.UnitId), global::Discom.UP.DataContracts.Measurement.Measurement.UnitId.Parser, new[]{ "Name", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.Vector), global::Discom.UP.DataContracts.Measurement.Measurement.Vector.Parser, new[]{ "Values", "XUnit", "YUnit", "XAxisRange", "Limits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint), global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint.Parser, new[]{ "Y" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrack), global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrack.Parser, new[]{ "Values", "XUnit", "YUnit", "ZUnit", "XAxisRange", "Limits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement), global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement.Parser, new[]{ "Z", "VectorPoints" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class AxisRange : pb::IMessage<AxisRange>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AxisRange> _parser = new pb::MessageParser<AxisRange>(() => new AxisRange());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AxisRange> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AxisRange() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AxisRange(AxisRange other) : this() {
      start_ = other.start_;
      delta_ = other.delta_;
      length_ = other.length_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AxisRange Clone() {
      return new AxisRange(this);
    }

    /// <summary>Field number for the "Start" field.</summary>
    public const int StartFieldNumber = 1;
    private float start_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Start {
      get { return start_; }
      set {
        start_ = value;
      }
    }

    /// <summary>Field number for the "Delta" field.</summary>
    public const int DeltaFieldNumber = 2;
    private float delta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Delta {
      get { return delta_; }
      set {
        delta_ = value;
      }
    }

    /// <summary>Field number for the "Length" field.</summary>
    public const int LengthFieldNumber = 3;
    private uint length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AxisRange);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AxisRange other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Start, other.Start)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Delta, other.Delta)) return false;
      if (Length != other.Length) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Start != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Start);
      if (Delta != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Delta);
      if (Length != 0) hash ^= Length.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Start != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Start);
      }
      if (Delta != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Delta);
      }
      if (Length != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Start != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Start);
      }
      if (Delta != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Delta);
      }
      if (Length != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Length);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Start != 0F) {
        size += 1 + 4;
      }
      if (Delta != 0F) {
        size += 1 + 4;
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Length);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AxisRange other) {
      if (other == null) {
        return;
      }
      if (other.Start != 0F) {
        Start = other.Start;
      }
      if (other.Delta != 0F) {
        Delta = other.Delta;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Start = input.ReadFloat();
            break;
          }
          case 21: {
            Delta = input.ReadFloat();
            break;
          }
          case 24: {
            Length = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Start = input.ReadFloat();
            break;
          }
          case 21: {
            Delta = input.ReadFloat();
            break;
          }
          case 24: {
            Length = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Clavis : pb::IMessage<Clavis>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Clavis> _parser = new pb::MessageParser<Clavis>(() => new Clavis());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Clavis> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Clavis() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Clavis(Clavis other) : this() {
      mode_ = other.mode_;
      instrument_ = other.instrument_;
      channel_ = other.channel_;
      location_ = other.location_;
      instrumentParameter_ = other.instrumentParameter_;
      sensor_ = other.sensor_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Clavis Clone() {
      return new Clavis(this);
    }

    /// <summary>Field number for the "Mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private string mode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Mode {
      get { return mode_; }
      set {
        mode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Instrument" field.</summary>
    public const int InstrumentFieldNumber = 2;
    private string instrument_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Instrument {
      get { return instrument_; }
      set {
        instrument_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Location" field.</summary>
    public const int LocationFieldNumber = 4;
    private string location_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Location {
      get { return location_; }
      set {
        location_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "InstrumentParameter" field.</summary>
    public const int InstrumentParameterFieldNumber = 5;
    private string instrumentParameter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentParameter {
      get { return instrumentParameter_; }
      set {
        instrumentParameter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Sensor" field.</summary>
    public const int SensorFieldNumber = 6;
    private string sensor_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Sensor {
      get { return sensor_; }
      set {
        sensor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Clavis);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Clavis other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      if (Instrument != other.Instrument) return false;
      if (Channel != other.Channel) return false;
      if (Location != other.Location) return false;
      if (InstrumentParameter != other.InstrumentParameter) return false;
      if (Sensor != other.Sensor) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode.Length != 0) hash ^= Mode.GetHashCode();
      if (Instrument.Length != 0) hash ^= Instrument.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Location.Length != 0) hash ^= Location.GetHashCode();
      if (InstrumentParameter.Length != 0) hash ^= InstrumentParameter.GetHashCode();
      if (Sensor.Length != 0) hash ^= Sensor.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Mode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mode);
      }
      if (Instrument.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Instrument);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Location);
      }
      if (InstrumentParameter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InstrumentParameter);
      }
      if (Sensor.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Sensor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Mode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Mode);
      }
      if (Instrument.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Instrument);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (Location.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Location);
      }
      if (InstrumentParameter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(InstrumentParameter);
      }
      if (Sensor.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Sensor);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Mode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Mode);
      }
      if (Instrument.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Instrument);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Location.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Location);
      }
      if (InstrumentParameter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentParameter);
      }
      if (Sensor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sensor);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Clavis other) {
      if (other == null) {
        return;
      }
      if (other.Mode.Length != 0) {
        Mode = other.Mode;
      }
      if (other.Instrument.Length != 0) {
        Instrument = other.Instrument;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Location.Length != 0) {
        Location = other.Location;
      }
      if (other.InstrumentParameter.Length != 0) {
        InstrumentParameter = other.InstrumentParameter;
      }
      if (other.Sensor.Length != 0) {
        Sensor = other.Sensor;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Mode = input.ReadString();
            break;
          }
          case 18: {
            Instrument = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Location = input.ReadString();
            break;
          }
          case 42: {
            InstrumentParameter = input.ReadString();
            break;
          }
          case 50: {
            Sensor = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Mode = input.ReadString();
            break;
          }
          case 18: {
            Instrument = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Location = input.ReadString();
            break;
          }
          case 42: {
            InstrumentParameter = input.ReadString();
            break;
          }
          case 50: {
            Sensor = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Defect : pb::IMessage<Defect>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Defect> _parser = new pb::MessageParser<Defect>(() => new Defect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Defect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Defect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Defect(Defect other) : this() {
      errorCode_ = other.errorCode_;
      errorText_ = other.errorText_;
      errorNr_ = other.errorNr_;
      errorResult_ = other.errorResult_;
      clavis_ = other.clavis_ != null ? other.clavis_.Clone() : null;
      value_ = other.value_;
      limit_ = other.limit_;
      position_ = other.position_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Defect Clone() {
      return new Defect(this);
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private int errorCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = value;
      }
    }

    /// <summary>Field number for the "ErrorText" field.</summary>
    public const int ErrorTextFieldNumber = 2;
    private string errorText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ErrorText {
      get { return errorText_; }
      set {
        errorText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ErrorNr" field.</summary>
    public const int ErrorNrFieldNumber = 3;
    private int errorNr_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorNr {
      get { return errorNr_; }
      set {
        errorNr_ = value;
      }
    }

    /// <summary>Field number for the "ErrorResult" field.</summary>
    public const int ErrorResultFieldNumber = 4;
    private int errorResult_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ErrorResult {
      get { return errorResult_; }
      set {
        errorResult_ = value;
      }
    }

    /// <summary>Field number for the "Clavis" field.</summary>
    public const int ClavisFieldNumber = 5;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Clavis clavis_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Clavis Clavis {
      get { return clavis_; }
      set {
        clavis_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 6;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "Limit" field.</summary>
    public const int LimitFieldNumber = 7;
    private float limit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Limit {
      get { return limit_; }
      set {
        limit_ = value;
      }
    }

    /// <summary>Field number for the "Position" field.</summary>
    public const int PositionFieldNumber = 8;
    private float position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Defect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Defect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (ErrorText != other.ErrorText) return false;
      if (ErrorNr != other.ErrorNr) return false;
      if (ErrorResult != other.ErrorResult) return false;
      if (!object.Equals(Clavis, other.Clavis)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Limit, other.Limit)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Position, other.Position)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode != 0) hash ^= ErrorCode.GetHashCode();
      if (ErrorText.Length != 0) hash ^= ErrorText.GetHashCode();
      if (ErrorNr != 0) hash ^= ErrorNr.GetHashCode();
      if (ErrorResult != 0) hash ^= ErrorResult.GetHashCode();
      if (clavis_ != null) hash ^= Clavis.GetHashCode();
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (Limit != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Limit);
      if (Position != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Position);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (ErrorText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorText);
      }
      if (ErrorNr != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ErrorNr);
      }
      if (ErrorResult != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ErrorResult);
      }
      if (clavis_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Clavis);
      }
      if (Value != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Value);
      }
      if (Limit != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Limit);
      }
      if (Position != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ErrorCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ErrorCode);
      }
      if (ErrorText.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ErrorText);
      }
      if (ErrorNr != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ErrorNr);
      }
      if (ErrorResult != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ErrorResult);
      }
      if (clavis_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Clavis);
      }
      if (Value != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Value);
      }
      if (Limit != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Limit);
      }
      if (Position != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Position);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorCode);
      }
      if (ErrorText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorText);
      }
      if (ErrorNr != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorNr);
      }
      if (ErrorResult != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ErrorResult);
      }
      if (clavis_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Clavis);
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (Limit != 0F) {
        size += 1 + 4;
      }
      if (Position != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Defect other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.ErrorText.Length != 0) {
        ErrorText = other.ErrorText;
      }
      if (other.ErrorNr != 0) {
        ErrorNr = other.ErrorNr;
      }
      if (other.ErrorResult != 0) {
        ErrorResult = other.ErrorResult;
      }
      if (other.clavis_ != null) {
        if (clavis_ == null) {
          Clavis = new global::Discom.UP.DataContracts.Measurement.Measurement.Clavis();
        }
        Clavis.MergeFrom(other.Clavis);
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      if (other.Limit != 0F) {
        Limit = other.Limit;
      }
      if (other.Position != 0F) {
        Position = other.Position;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            ErrorText = input.ReadString();
            break;
          }
          case 24: {
            ErrorNr = input.ReadInt32();
            break;
          }
          case 32: {
            ErrorResult = input.ReadInt32();
            break;
          }
          case 42: {
            if (clavis_ == null) {
              Clavis = new global::Discom.UP.DataContracts.Measurement.Measurement.Clavis();
            }
            input.ReadMessage(Clavis);
            break;
          }
          case 53: {
            Value = input.ReadFloat();
            break;
          }
          case 61: {
            Limit = input.ReadFloat();
            break;
          }
          case 69: {
            Position = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ErrorCode = input.ReadInt32();
            break;
          }
          case 18: {
            ErrorText = input.ReadString();
            break;
          }
          case 24: {
            ErrorNr = input.ReadInt32();
            break;
          }
          case 32: {
            ErrorResult = input.ReadInt32();
            break;
          }
          case 42: {
            if (clavis_ == null) {
              Clavis = new global::Discom.UP.DataContracts.Measurement.Measurement.Clavis();
            }
            input.ReadMessage(Clavis);
            break;
          }
          case 53: {
            Value = input.ReadFloat();
            break;
          }
          case 61: {
            Limit = input.ReadFloat();
            break;
          }
          case 69: {
            Position = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DefectReport : pb::IMessage<DefectReport>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DefectReport> _parser = new pb::MessageParser<DefectReport>(() => new DefectReport());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DefectReport> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefectReport() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefectReport(DefectReport other) : this() {
      defects_ = other.defects_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DefectReport Clone() {
      return new DefectReport(this);
    }

    /// <summary>Field number for the "Defects" field.</summary>
    public const int DefectsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.Defect> _repeated_defects_codec
        = pb::FieldCodec.ForMessage(10, global::Discom.UP.DataContracts.Measurement.Measurement.Defect.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.Defect> defects_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.Defect>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.Defect> Defects {
      get { return defects_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DefectReport);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DefectReport other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!defects_.Equals(other.defects_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= defects_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      defects_.WriteTo(output, _repeated_defects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      defects_.WriteTo(ref output, _repeated_defects_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += defects_.CalculateSize(_repeated_defects_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DefectReport other) {
      if (other == null) {
        return;
      }
      defects_.Add(other.defects_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            defects_.AddEntriesFrom(input, _repeated_defects_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            defects_.AddEntriesFrom(ref input, _repeated_defects_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GeneralInformation : pb::IMessage<GeneralInformation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GeneralInformation> _parser = new pb::MessageParser<GeneralInformation>(() => new GeneralInformation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GeneralInformation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeneralInformation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeneralInformation(GeneralInformation other) : this() {
      measurementTime_ = other.measurementTime_ != null ? other.measurementTime_.Clone() : null;
      serial_ = other.serial_;
      type_ = other.type_;
      baseType_ = other.baseType_;
      bench_ = other.bench_;
      result_ = other.result_;
      resultId_ = other.resultId_;
      testProperty_ = other.testProperty_;
      testKind_ = other.testKind_;
      ordinal_ = other.ordinal_;
      thisLast_ = other.thisLast_;
      pkIdent_ = other.pkIdent_;
      storagePath_ = other.storagePath_;
      fileName_ = other.fileName_;
      filePath_ = other.filePath_;
      fileOffset_ = other.fileOffset_;
      additionalInfo_ = other.additionalInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GeneralInformation Clone() {
      return new GeneralInformation(this);
    }

    /// <summary>Field number for the "MeasurementTime" field.</summary>
    public const int MeasurementTimeFieldNumber = 1;
    private global::Discom.UP.DataContracts.Measurement.ProtoBuf.Bcl.DateTime measurementTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.ProtoBuf.Bcl.DateTime MeasurementTime {
      get { return measurementTime_; }
      set {
        measurementTime_ = value;
      }
    }

    /// <summary>Field number for the "Serial" field.</summary>
    public const int SerialFieldNumber = 2;
    private string serial_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Serial {
      get { return serial_; }
      set {
        serial_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 3;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BaseType" field.</summary>
    public const int BaseTypeFieldNumber = 4;
    private string baseType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BaseType {
      get { return baseType_; }
      set {
        baseType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Bench" field.</summary>
    public const int BenchFieldNumber = 5;
    private string bench_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Bench {
      get { return bench_; }
      set {
        bench_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 6;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResultId" field.</summary>
    public const int ResultIdFieldNumber = 7;
    private int resultId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ResultId {
      get { return resultId_; }
      set {
        resultId_ = value;
      }
    }

    /// <summary>Field number for the "TestProperty" field.</summary>
    public const int TestPropertyFieldNumber = 8;
    private string testProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TestProperty {
      get { return testProperty_; }
      set {
        testProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TestKind" field.</summary>
    public const int TestKindFieldNumber = 9;
    private string testKind_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TestKind {
      get { return testKind_; }
      set {
        testKind_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ordinal" field.</summary>
    public const int OrdinalFieldNumber = 10;
    private int ordinal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Ordinal {
      get { return ordinal_; }
      set {
        ordinal_ = value;
      }
    }

    /// <summary>Field number for the "ThisLast" field.</summary>
    public const int ThisLastFieldNumber = 11;
    private bool thisLast_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ThisLast {
      get { return thisLast_; }
      set {
        thisLast_ = value;
      }
    }

    /// <summary>Field number for the "PkIdent" field.</summary>
    public const int PkIdentFieldNumber = 12;
    private int pkIdent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PkIdent {
      get { return pkIdent_; }
      set {
        pkIdent_ = value;
      }
    }

    /// <summary>Field number for the "StoragePath" field.</summary>
    public const int StoragePathFieldNumber = 13;
    private string storagePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StoragePath {
      get { return storagePath_; }
      set {
        storagePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FileName" field.</summary>
    public const int FileNameFieldNumber = 14;
    private string fileName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FileName {
      get { return fileName_; }
      set {
        fileName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FilePath" field.</summary>
    public const int FilePathFieldNumber = 15;
    private string filePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FilePath {
      get { return filePath_; }
      set {
        filePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FileOffset" field.</summary>
    public const int FileOffsetFieldNumber = 16;
    private int fileOffset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int FileOffset {
      get { return fileOffset_; }
      set {
        fileOffset_ = value;
      }
    }

    /// <summary>Field number for the "AdditionalInfo" field.</summary>
    public const int AdditionalInfoFieldNumber = 17;
    private static readonly pbc::MapField<string, string>.Codec _map_additionalInfo_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 138);
    private readonly pbc::MapField<string, string> additionalInfo_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, string> AdditionalInfo {
      get { return additionalInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GeneralInformation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GeneralInformation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(MeasurementTime, other.MeasurementTime)) return false;
      if (Serial != other.Serial) return false;
      if (Type != other.Type) return false;
      if (BaseType != other.BaseType) return false;
      if (Bench != other.Bench) return false;
      if (Result != other.Result) return false;
      if (ResultId != other.ResultId) return false;
      if (TestProperty != other.TestProperty) return false;
      if (TestKind != other.TestKind) return false;
      if (Ordinal != other.Ordinal) return false;
      if (ThisLast != other.ThisLast) return false;
      if (PkIdent != other.PkIdent) return false;
      if (StoragePath != other.StoragePath) return false;
      if (FileName != other.FileName) return false;
      if (FilePath != other.FilePath) return false;
      if (FileOffset != other.FileOffset) return false;
      if (!AdditionalInfo.Equals(other.AdditionalInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (measurementTime_ != null) hash ^= MeasurementTime.GetHashCode();
      if (Serial.Length != 0) hash ^= Serial.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (BaseType.Length != 0) hash ^= BaseType.GetHashCode();
      if (Bench.Length != 0) hash ^= Bench.GetHashCode();
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (ResultId != 0) hash ^= ResultId.GetHashCode();
      if (TestProperty.Length != 0) hash ^= TestProperty.GetHashCode();
      if (TestKind.Length != 0) hash ^= TestKind.GetHashCode();
      if (Ordinal != 0) hash ^= Ordinal.GetHashCode();
      if (ThisLast != false) hash ^= ThisLast.GetHashCode();
      if (PkIdent != 0) hash ^= PkIdent.GetHashCode();
      if (StoragePath.Length != 0) hash ^= StoragePath.GetHashCode();
      if (FileName.Length != 0) hash ^= FileName.GetHashCode();
      if (FilePath.Length != 0) hash ^= FilePath.GetHashCode();
      if (FileOffset != 0) hash ^= FileOffset.GetHashCode();
      hash ^= AdditionalInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (measurementTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MeasurementTime);
      }
      if (Serial.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Serial);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      if (BaseType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BaseType);
      }
      if (Bench.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bench);
      }
      if (Result.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Result);
      }
      if (ResultId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ResultId);
      }
      if (TestProperty.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TestProperty);
      }
      if (TestKind.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TestKind);
      }
      if (Ordinal != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Ordinal);
      }
      if (ThisLast != false) {
        output.WriteRawTag(88);
        output.WriteBool(ThisLast);
      }
      if (PkIdent != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PkIdent);
      }
      if (StoragePath.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(StoragePath);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(FileName);
      }
      if (FilePath.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(FilePath);
      }
      if (FileOffset != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(FileOffset);
      }
      additionalInfo_.WriteTo(output, _map_additionalInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (measurementTime_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(MeasurementTime);
      }
      if (Serial.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Serial);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Type);
      }
      if (BaseType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(BaseType);
      }
      if (Bench.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Bench);
      }
      if (Result.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Result);
      }
      if (ResultId != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ResultId);
      }
      if (TestProperty.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TestProperty);
      }
      if (TestKind.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TestKind);
      }
      if (Ordinal != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Ordinal);
      }
      if (ThisLast != false) {
        output.WriteRawTag(88);
        output.WriteBool(ThisLast);
      }
      if (PkIdent != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PkIdent);
      }
      if (StoragePath.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(StoragePath);
      }
      if (FileName.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(FileName);
      }
      if (FilePath.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(FilePath);
      }
      if (FileOffset != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(FileOffset);
      }
      additionalInfo_.WriteTo(ref output, _map_additionalInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (measurementTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeasurementTime);
      }
      if (Serial.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Serial);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (BaseType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseType);
      }
      if (Bench.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bench);
      }
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (ResultId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ResultId);
      }
      if (TestProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestProperty);
      }
      if (TestKind.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TestKind);
      }
      if (Ordinal != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Ordinal);
      }
      if (ThisLast != false) {
        size += 1 + 1;
      }
      if (PkIdent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PkIdent);
      }
      if (StoragePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StoragePath);
      }
      if (FileName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FileName);
      }
      if (FilePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FilePath);
      }
      if (FileOffset != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(FileOffset);
      }
      size += additionalInfo_.CalculateSize(_map_additionalInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GeneralInformation other) {
      if (other == null) {
        return;
      }
      if (other.measurementTime_ != null) {
        if (measurementTime_ == null) {
          MeasurementTime = new global::Discom.UP.DataContracts.Measurement.ProtoBuf.Bcl.DateTime();
        }
        MeasurementTime.MergeFrom(other.MeasurementTime);
      }
      if (other.Serial.Length != 0) {
        Serial = other.Serial;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.BaseType.Length != 0) {
        BaseType = other.BaseType;
      }
      if (other.Bench.Length != 0) {
        Bench = other.Bench;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      if (other.ResultId != 0) {
        ResultId = other.ResultId;
      }
      if (other.TestProperty.Length != 0) {
        TestProperty = other.TestProperty;
      }
      if (other.TestKind.Length != 0) {
        TestKind = other.TestKind;
      }
      if (other.Ordinal != 0) {
        Ordinal = other.Ordinal;
      }
      if (other.ThisLast != false) {
        ThisLast = other.ThisLast;
      }
      if (other.PkIdent != 0) {
        PkIdent = other.PkIdent;
      }
      if (other.StoragePath.Length != 0) {
        StoragePath = other.StoragePath;
      }
      if (other.FileName.Length != 0) {
        FileName = other.FileName;
      }
      if (other.FilePath.Length != 0) {
        FilePath = other.FilePath;
      }
      if (other.FileOffset != 0) {
        FileOffset = other.FileOffset;
      }
      additionalInfo_.Add(other.additionalInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (measurementTime_ == null) {
              MeasurementTime = new global::Discom.UP.DataContracts.Measurement.ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(MeasurementTime);
            break;
          }
          case 18: {
            Serial = input.ReadString();
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 34: {
            BaseType = input.ReadString();
            break;
          }
          case 42: {
            Bench = input.ReadString();
            break;
          }
          case 50: {
            Result = input.ReadString();
            break;
          }
          case 56: {
            ResultId = input.ReadInt32();
            break;
          }
          case 66: {
            TestProperty = input.ReadString();
            break;
          }
          case 74: {
            TestKind = input.ReadString();
            break;
          }
          case 80: {
            Ordinal = input.ReadInt32();
            break;
          }
          case 88: {
            ThisLast = input.ReadBool();
            break;
          }
          case 96: {
            PkIdent = input.ReadInt32();
            break;
          }
          case 106: {
            StoragePath = input.ReadString();
            break;
          }
          case 114: {
            FileName = input.ReadString();
            break;
          }
          case 122: {
            FilePath = input.ReadString();
            break;
          }
          case 128: {
            FileOffset = input.ReadInt32();
            break;
          }
          case 138: {
            additionalInfo_.AddEntriesFrom(input, _map_additionalInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (measurementTime_ == null) {
              MeasurementTime = new global::Discom.UP.DataContracts.Measurement.ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(MeasurementTime);
            break;
          }
          case 18: {
            Serial = input.ReadString();
            break;
          }
          case 26: {
            Type = input.ReadString();
            break;
          }
          case 34: {
            BaseType = input.ReadString();
            break;
          }
          case 42: {
            Bench = input.ReadString();
            break;
          }
          case 50: {
            Result = input.ReadString();
            break;
          }
          case 56: {
            ResultId = input.ReadInt32();
            break;
          }
          case 66: {
            TestProperty = input.ReadString();
            break;
          }
          case 74: {
            TestKind = input.ReadString();
            break;
          }
          case 80: {
            Ordinal = input.ReadInt32();
            break;
          }
          case 88: {
            ThisLast = input.ReadBool();
            break;
          }
          case 96: {
            PkIdent = input.ReadInt32();
            break;
          }
          case 106: {
            StoragePath = input.ReadString();
            break;
          }
          case 114: {
            FileName = input.ReadString();
            break;
          }
          case 122: {
            FilePath = input.ReadString();
            break;
          }
          case 128: {
            FileOffset = input.ReadInt32();
            break;
          }
          case 138: {
            additionalInfo_.AddEntriesFrom(ref input, _map_additionalInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyValuePair_Clavis_MeasurementValue : pb::IMessage<KeyValuePair_Clavis_MeasurementValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyValuePair_Clavis_MeasurementValue> _parser = new pb::MessageParser<KeyValuePair_Clavis_MeasurementValue>(() => new KeyValuePair_Clavis_MeasurementValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyValuePair_Clavis_MeasurementValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Clavis_MeasurementValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Clavis_MeasurementValue(KeyValuePair_Clavis_MeasurementValue other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      value_ = other.value_ != null ? other.value_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Clavis_MeasurementValue Clone() {
      return new KeyValuePair_Clavis_MeasurementValue(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Clavis key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Clavis Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValue value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValue Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyValuePair_Clavis_MeasurementValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyValuePair_Clavis_MeasurementValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (value_ != null) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (value_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (value_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyValuePair_Clavis_MeasurementValue other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Clavis();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.value_ != null) {
        if (value_ == null) {
          Value = new global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValue();
        }
        Value.MergeFrom(other.Value);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Clavis();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValue();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Clavis();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (value_ == null) {
              Value = new global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValue();
            }
            input.ReadMessage(Value);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyValuePair_Limit_List_MatrixElement : pb::IMessage<KeyValuePair_Limit_List_MatrixElement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyValuePair_Limit_List_MatrixElement> _parser = new pb::MessageParser<KeyValuePair_Limit_List_MatrixElement>(() => new KeyValuePair_Limit_List_MatrixElement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyValuePair_Limit_List_MatrixElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_MatrixElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_MatrixElement(KeyValuePair_Limit_List_MatrixElement other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_MatrixElement Clone() {
      return new KeyValuePair_Limit_List_MatrixElement(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Limit key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Limit Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement> _repeated_value_codec
        = pb::FieldCodec.ForMessage(18, global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement> value_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyValuePair_Limit_List_MatrixElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyValuePair_Limit_List_MatrixElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyValuePair_Limit_List_MatrixElement other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
        }
        Key.MergeFrom(other.Key);
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyValuePair_Limit_List_ScalarTrackPoint : pb::IMessage<KeyValuePair_Limit_List_ScalarTrackPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyValuePair_Limit_List_ScalarTrackPoint> _parser = new pb::MessageParser<KeyValuePair_Limit_List_ScalarTrackPoint>(() => new KeyValuePair_Limit_List_ScalarTrackPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyValuePair_Limit_List_ScalarTrackPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_ScalarTrackPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_ScalarTrackPoint(KeyValuePair_Limit_List_ScalarTrackPoint other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_ScalarTrackPoint Clone() {
      return new KeyValuePair_Limit_List_ScalarTrackPoint(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Limit key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Limit Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint> _repeated_value_codec
        = pb::FieldCodec.ForMessage(18, global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint> value_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyValuePair_Limit_List_ScalarTrackPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyValuePair_Limit_List_ScalarTrackPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyValuePair_Limit_List_ScalarTrackPoint other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
        }
        Key.MergeFrom(other.Key);
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyValuePair_Limit_List_VectorPoint : pb::IMessage<KeyValuePair_Limit_List_VectorPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyValuePair_Limit_List_VectorPoint> _parser = new pb::MessageParser<KeyValuePair_Limit_List_VectorPoint>(() => new KeyValuePair_Limit_List_VectorPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyValuePair_Limit_List_VectorPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_VectorPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_VectorPoint(KeyValuePair_Limit_List_VectorPoint other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_VectorPoint Clone() {
      return new KeyValuePair_Limit_List_VectorPoint(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Limit key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Limit Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> _repeated_value_codec
        = pb::FieldCodec.ForMessage(18, global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> value_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyValuePair_Limit_List_VectorPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyValuePair_Limit_List_VectorPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyValuePair_Limit_List_VectorPoint other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
        }
        Key.MergeFrom(other.Key);
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyValuePair_Limit_List_VectorTrackElement : pb::IMessage<KeyValuePair_Limit_List_VectorTrackElement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyValuePair_Limit_List_VectorTrackElement> _parser = new pb::MessageParser<KeyValuePair_Limit_List_VectorTrackElement>(() => new KeyValuePair_Limit_List_VectorTrackElement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyValuePair_Limit_List_VectorTrackElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_VectorTrackElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_VectorTrackElement(KeyValuePair_Limit_List_VectorTrackElement other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      value_ = other.value_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_List_VectorTrackElement Clone() {
      return new KeyValuePair_Limit_List_VectorTrackElement(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Limit key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Limit Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement> _repeated_value_codec
        = pb::FieldCodec.ForMessage(18, global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement> value_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement> Value {
      get { return value_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyValuePair_Limit_List_VectorTrackElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyValuePair_Limit_List_VectorTrackElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if(!value_.Equals(other.value_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      hash ^= value_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      value_.WriteTo(output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      value_.WriteTo(ref output, _repeated_value_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      size += value_.CalculateSize(_repeated_value_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyValuePair_Limit_List_VectorTrackElement other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
        }
        Key.MergeFrom(other.Key);
      }
      value_.Add(other.value_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            value_.AddEntriesFrom(input, _repeated_value_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            value_.AddEntriesFrom(ref input, _repeated_value_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class KeyValuePair_Limit_Single : pb::IMessage<KeyValuePair_Limit_Single>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyValuePair_Limit_Single> _parser = new pb::MessageParser<KeyValuePair_Limit_Single>(() => new KeyValuePair_Limit_Single());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyValuePair_Limit_Single> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_Single() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_Single(KeyValuePair_Limit_Single other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyValuePair_Limit_Single Clone() {
      return new KeyValuePair_Limit_Single(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Limit key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Limit Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyValuePair_Limit_Single);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyValuePair_Limit_Single other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (Value != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (Value != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyValuePair_Limit_Single other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
            }
            input.ReadMessage(Key);
            break;
          }
          case 21: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Discom.UP.DataContracts.Measurement.Measurement.Limit();
            }
            input.ReadMessage(Key);
            break;
          }
          case 21: {
            Value = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Limit : pb::IMessage<Limit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Limit> _parser = new pb::MessageParser<Limit>(() => new Limit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Limit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Limit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Limit(Limit other) : this() {
      description_ = other.description_;
      limitType_ = other.limitType_ != null ? other.limitType_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Limit Clone() {
      return new Limit(this);
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LimitType" field.</summary>
    public const int LimitTypeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Measurement.Measurement.LimitType limitType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.LimitType LimitType {
      get { return limitType_; }
      set {
        limitType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Limit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Limit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (!object.Equals(LimitType, other.LimitType)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (limitType_ != null) hash ^= LimitType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (limitType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LimitType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (limitType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(LimitType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (limitType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LimitType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Limit other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.limitType_ != null) {
        if (limitType_ == null) {
          LimitType = new global::Discom.UP.DataContracts.Measurement.Measurement.LimitType();
        }
        LimitType.MergeFrom(other.LimitType);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (limitType_ == null) {
              LimitType = new global::Discom.UP.DataContracts.Measurement.Measurement.LimitType();
            }
            input.ReadMessage(LimitType);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 18: {
            if (limitType_ == null) {
              LimitType = new global::Discom.UP.DataContracts.Measurement.Measurement.LimitType();
            }
            input.ReadMessage(LimitType);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LimitType : pb::IMessage<LimitType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LimitType> _parser = new pb::MessageParser<LimitType>(() => new LimitType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LimitType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitType(LimitType other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitType Clone() {
      return new LimitType(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LimitType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LimitType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LimitType other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Matrix : pb::IMessage<Matrix>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Matrix> _parser = new pb::MessageParser<Matrix>(() => new Matrix());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Matrix> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Matrix() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Matrix(Matrix other) : this() {
      values_ = other.values_.Clone();
      xUnit_ = other.xUnit_ != null ? other.xUnit_.Clone() : null;
      yUnit_ = other.yUnit_ != null ? other.yUnit_.Clone() : null;
      zUnit_ = other.zUnit_ != null ? other.zUnit_.Clone() : null;
      xAxisRange_ = other.xAxisRange_ != null ? other.xAxisRange_.Clone() : null;
      zAxisRange_ = other.zAxisRange_ != null ? other.zAxisRange_.Clone() : null;
      limits_ = other.limits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Matrix Clone() {
      return new Matrix(this);
    }

    /// <summary>Field number for the "Values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement> values_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.MatrixElement> Values {
      get { return values_; }
    }

    /// <summary>Field number for the "XUnit" field.</summary>
    public const int XUnitFieldNumber = 2;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit xUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit XUnit {
      get { return xUnit_; }
      set {
        xUnit_ = value;
      }
    }

    /// <summary>Field number for the "YUnit" field.</summary>
    public const int YUnitFieldNumber = 3;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit yUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit YUnit {
      get { return yUnit_; }
      set {
        yUnit_ = value;
      }
    }

    /// <summary>Field number for the "ZUnit" field.</summary>
    public const int ZUnitFieldNumber = 4;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit zUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit ZUnit {
      get { return zUnit_; }
      set {
        zUnit_ = value;
      }
    }

    /// <summary>Field number for the "XAxisRange" field.</summary>
    public const int XAxisRangeFieldNumber = 5;
    private global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange xAxisRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange XAxisRange {
      get { return xAxisRange_; }
      set {
        xAxisRange_ = value;
      }
    }

    /// <summary>Field number for the "ZAxisRange" field.</summary>
    public const int ZAxisRangeFieldNumber = 6;
    private global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange zAxisRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange ZAxisRange {
      get { return zAxisRange_; }
      set {
        zAxisRange_ = value;
      }
    }

    /// <summary>Field number for the "Limits" field.</summary>
    public const int LimitsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_MatrixElement> _repeated_limits_codec
        = pb::FieldCodec.ForMessage(58, global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_MatrixElement.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_MatrixElement> limits_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_MatrixElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_MatrixElement> Limits {
      get { return limits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Matrix);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Matrix other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      if (!object.Equals(XUnit, other.XUnit)) return false;
      if (!object.Equals(YUnit, other.YUnit)) return false;
      if (!object.Equals(ZUnit, other.ZUnit)) return false;
      if (!object.Equals(XAxisRange, other.XAxisRange)) return false;
      if (!object.Equals(ZAxisRange, other.ZAxisRange)) return false;
      if(!limits_.Equals(other.limits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (xUnit_ != null) hash ^= XUnit.GetHashCode();
      if (yUnit_ != null) hash ^= YUnit.GetHashCode();
      if (zUnit_ != null) hash ^= ZUnit.GetHashCode();
      if (xAxisRange_ != null) hash ^= XAxisRange.GetHashCode();
      if (zAxisRange_ != null) hash ^= ZAxisRange.GetHashCode();
      hash ^= limits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (xUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(XUnit);
      }
      if (yUnit_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(YUnit);
      }
      if (zUnit_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ZUnit);
      }
      if (xAxisRange_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(XAxisRange);
      }
      if (zAxisRange_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ZAxisRange);
      }
      limits_.WriteTo(output, _repeated_limits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (xUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(XUnit);
      }
      if (yUnit_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(YUnit);
      }
      if (zUnit_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ZUnit);
      }
      if (xAxisRange_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(XAxisRange);
      }
      if (zAxisRange_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ZAxisRange);
      }
      limits_.WriteTo(ref output, _repeated_limits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (xUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(XUnit);
      }
      if (yUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YUnit);
      }
      if (zUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ZUnit);
      }
      if (xAxisRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(XAxisRange);
      }
      if (zAxisRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ZAxisRange);
      }
      size += limits_.CalculateSize(_repeated_limits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Matrix other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      if (other.xUnit_ != null) {
        if (xUnit_ == null) {
          XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        XUnit.MergeFrom(other.XUnit);
      }
      if (other.yUnit_ != null) {
        if (yUnit_ == null) {
          YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        YUnit.MergeFrom(other.YUnit);
      }
      if (other.zUnit_ != null) {
        if (zUnit_ == null) {
          ZUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        ZUnit.MergeFrom(other.ZUnit);
      }
      if (other.xAxisRange_ != null) {
        if (xAxisRange_ == null) {
          XAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
        }
        XAxisRange.MergeFrom(other.XAxisRange);
      }
      if (other.zAxisRange_ != null) {
        if (zAxisRange_ == null) {
          ZAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
        }
        ZAxisRange.MergeFrom(other.ZAxisRange);
      }
      limits_.Add(other.limits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
          case 18: {
            if (xUnit_ == null) {
              XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(XUnit);
            break;
          }
          case 26: {
            if (yUnit_ == null) {
              YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(YUnit);
            break;
          }
          case 34: {
            if (zUnit_ == null) {
              ZUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(ZUnit);
            break;
          }
          case 42: {
            if (xAxisRange_ == null) {
              XAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
            }
            input.ReadMessage(XAxisRange);
            break;
          }
          case 50: {
            if (zAxisRange_ == null) {
              ZAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
            }
            input.ReadMessage(ZAxisRange);
            break;
          }
          case 58: {
            limits_.AddEntriesFrom(input, _repeated_limits_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
          case 18: {
            if (xUnit_ == null) {
              XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(XUnit);
            break;
          }
          case 26: {
            if (yUnit_ == null) {
              YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(YUnit);
            break;
          }
          case 34: {
            if (zUnit_ == null) {
              ZUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(ZUnit);
            break;
          }
          case 42: {
            if (xAxisRange_ == null) {
              XAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
            }
            input.ReadMessage(XAxisRange);
            break;
          }
          case 50: {
            if (zAxisRange_ == null) {
              ZAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
            }
            input.ReadMessage(ZAxisRange);
            break;
          }
          case 58: {
            limits_.AddEntriesFrom(ref input, _repeated_limits_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MatrixElement : pb::IMessage<MatrixElement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MatrixElement> _parser = new pb::MessageParser<MatrixElement>(() => new MatrixElement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MatrixElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatrixElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatrixElement(MatrixElement other) : this() {
      vectorPoints_ = other.vectorPoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MatrixElement Clone() {
      return new MatrixElement(this);
    }

    /// <summary>Field number for the "VectorPoints" field.</summary>
    public const int VectorPointsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> _repeated_vectorPoints_codec
        = pb::FieldCodec.ForMessage(10, global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> vectorPoints_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> VectorPoints {
      get { return vectorPoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MatrixElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MatrixElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!vectorPoints_.Equals(other.vectorPoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= vectorPoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      vectorPoints_.WriteTo(output, _repeated_vectorPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      vectorPoints_.WriteTo(ref output, _repeated_vectorPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += vectorPoints_.CalculateSize(_repeated_vectorPoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MatrixElement other) {
      if (other == null) {
        return;
      }
      vectorPoints_.Add(other.vectorPoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            vectorPoints_.AddEntriesFrom(input, _repeated_vectorPoints_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            vectorPoints_.AddEntriesFrom(ref input, _repeated_vectorPoints_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Measurement : pb::IMessage<Measurement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Measurement> _parser = new pb::MessageParser<Measurement>(() => new Measurement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Measurement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Measurement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Measurement(Measurement other) : this() {
      generalInformation_ = other.generalInformation_ != null ? other.generalInformation_.Clone() : null;
      measurementData_ = other.measurementData_ != null ? other.measurementData_.Clone() : null;
      defectReport_ = other.defectReport_ != null ? other.defectReport_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Measurement Clone() {
      return new Measurement(this);
    }

    /// <summary>Field number for the "GeneralInformation" field.</summary>
    public const int GeneralInformationFieldNumber = 1;
    private global::Discom.UP.DataContracts.Measurement.Measurement.GeneralInformation generalInformation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.GeneralInformation GeneralInformation {
      get { return generalInformation_; }
      set {
        generalInformation_ = value;
      }
    }

    /// <summary>Field number for the "MeasurementData" field.</summary>
    public const int MeasurementDataFieldNumber = 2;
    private global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValues measurementData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValues MeasurementData {
      get { return measurementData_; }
      set {
        measurementData_ = value;
      }
    }

    /// <summary>Field number for the "DefectReport" field.</summary>
    public const int DefectReportFieldNumber = 3;
    private global::Discom.UP.DataContracts.Measurement.Measurement.DefectReport defectReport_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.DefectReport DefectReport {
      get { return defectReport_; }
      set {
        defectReport_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Measurement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Measurement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(GeneralInformation, other.GeneralInformation)) return false;
      if (!object.Equals(MeasurementData, other.MeasurementData)) return false;
      if (!object.Equals(DefectReport, other.DefectReport)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (generalInformation_ != null) hash ^= GeneralInformation.GetHashCode();
      if (measurementData_ != null) hash ^= MeasurementData.GetHashCode();
      if (defectReport_ != null) hash ^= DefectReport.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (generalInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GeneralInformation);
      }
      if (measurementData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MeasurementData);
      }
      if (defectReport_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DefectReport);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (generalInformation_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(GeneralInformation);
      }
      if (measurementData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(MeasurementData);
      }
      if (defectReport_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(DefectReport);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (generalInformation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GeneralInformation);
      }
      if (measurementData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeasurementData);
      }
      if (defectReport_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DefectReport);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Measurement other) {
      if (other == null) {
        return;
      }
      if (other.generalInformation_ != null) {
        if (generalInformation_ == null) {
          GeneralInformation = new global::Discom.UP.DataContracts.Measurement.Measurement.GeneralInformation();
        }
        GeneralInformation.MergeFrom(other.GeneralInformation);
      }
      if (other.measurementData_ != null) {
        if (measurementData_ == null) {
          MeasurementData = new global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValues();
        }
        MeasurementData.MergeFrom(other.MeasurementData);
      }
      if (other.defectReport_ != null) {
        if (defectReport_ == null) {
          DefectReport = new global::Discom.UP.DataContracts.Measurement.Measurement.DefectReport();
        }
        DefectReport.MergeFrom(other.DefectReport);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (generalInformation_ == null) {
              GeneralInformation = new global::Discom.UP.DataContracts.Measurement.Measurement.GeneralInformation();
            }
            input.ReadMessage(GeneralInformation);
            break;
          }
          case 18: {
            if (measurementData_ == null) {
              MeasurementData = new global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValues();
            }
            input.ReadMessage(MeasurementData);
            break;
          }
          case 26: {
            if (defectReport_ == null) {
              DefectReport = new global::Discom.UP.DataContracts.Measurement.Measurement.DefectReport();
            }
            input.ReadMessage(DefectReport);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (generalInformation_ == null) {
              GeneralInformation = new global::Discom.UP.DataContracts.Measurement.Measurement.GeneralInformation();
            }
            input.ReadMessage(GeneralInformation);
            break;
          }
          case 18: {
            if (measurementData_ == null) {
              MeasurementData = new global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementValues();
            }
            input.ReadMessage(MeasurementData);
            break;
          }
          case 26: {
            if (defectReport_ == null) {
              DefectReport = new global::Discom.UP.DataContracts.Measurement.Measurement.DefectReport();
            }
            input.ReadMessage(DefectReport);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class List_Measurement : pb::IMessage<List_Measurement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<List_Measurement> _parser = new pb::MessageParser<List_Measurement>(() => new List_Measurement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<List_Measurement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public List_Measurement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public List_Measurement(List_Measurement other) : this() {
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public List_Measurement Clone() {
      return new List_Measurement(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.Measurement> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Discom.UP.DataContracts.Measurement.Measurement.Measurement.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.Measurement> items_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.Measurement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.Measurement> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as List_Measurement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(List_Measurement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(List_Measurement other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MeasurementValue : pb::IMessage<MeasurementValue>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MeasurementValue> _parser = new pb::MessageParser<MeasurementValue>(() => new MeasurementValue());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MeasurementValue> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementValue() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementValue(MeasurementValue other) : this() {
      scalar_ = other.scalar_ != null ? other.scalar_.Clone() : null;
      scalarTrack_ = other.scalarTrack_ != null ? other.scalarTrack_.Clone() : null;
      vector_ = other.vector_ != null ? other.vector_.Clone() : null;
      vectorTrack_ = other.vectorTrack_ != null ? other.vectorTrack_.Clone() : null;
      matrix_ = other.matrix_ != null ? other.matrix_.Clone() : null;
      invalid_ = other.invalid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementValue Clone() {
      return new MeasurementValue(this);
    }

    /// <summary>Field number for the "Scalar" field.</summary>
    public const int ScalarFieldNumber = 1;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Scalar scalar_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Scalar Scalar {
      get { return scalar_; }
      set {
        scalar_ = value;
      }
    }

    /// <summary>Field number for the "ScalarTrack" field.</summary>
    public const int ScalarTrackFieldNumber = 2;
    private global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrack scalarTrack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrack ScalarTrack {
      get { return scalarTrack_; }
      set {
        scalarTrack_ = value;
      }
    }

    /// <summary>Field number for the "Vector" field.</summary>
    public const int VectorFieldNumber = 3;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Vector vector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Vector Vector {
      get { return vector_; }
      set {
        vector_ = value;
      }
    }

    /// <summary>Field number for the "VectorTrack" field.</summary>
    public const int VectorTrackFieldNumber = 4;
    private global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrack vectorTrack_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrack VectorTrack {
      get { return vectorTrack_; }
      set {
        vectorTrack_ = value;
      }
    }

    /// <summary>Field number for the "Matrix" field.</summary>
    public const int MatrixFieldNumber = 5;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Matrix matrix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Matrix Matrix {
      get { return matrix_; }
      set {
        matrix_ = value;
      }
    }

    /// <summary>Field number for the "Invalid" field.</summary>
    public const int InvalidFieldNumber = 100;
    private string invalid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Invalid {
      get { return invalid_; }
      set {
        invalid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MeasurementValue);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MeasurementValue other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Scalar, other.Scalar)) return false;
      if (!object.Equals(ScalarTrack, other.ScalarTrack)) return false;
      if (!object.Equals(Vector, other.Vector)) return false;
      if (!object.Equals(VectorTrack, other.VectorTrack)) return false;
      if (!object.Equals(Matrix, other.Matrix)) return false;
      if (Invalid != other.Invalid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (scalar_ != null) hash ^= Scalar.GetHashCode();
      if (scalarTrack_ != null) hash ^= ScalarTrack.GetHashCode();
      if (vector_ != null) hash ^= Vector.GetHashCode();
      if (vectorTrack_ != null) hash ^= VectorTrack.GetHashCode();
      if (matrix_ != null) hash ^= Matrix.GetHashCode();
      if (Invalid.Length != 0) hash ^= Invalid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (scalar_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Scalar);
      }
      if (scalarTrack_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScalarTrack);
      }
      if (vector_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Vector);
      }
      if (vectorTrack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(VectorTrack);
      }
      if (matrix_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Matrix);
      }
      if (Invalid.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(Invalid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (scalar_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Scalar);
      }
      if (scalarTrack_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ScalarTrack);
      }
      if (vector_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Vector);
      }
      if (vectorTrack_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(VectorTrack);
      }
      if (matrix_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Matrix);
      }
      if (Invalid.Length != 0) {
        output.WriteRawTag(162, 6);
        output.WriteString(Invalid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (scalar_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scalar);
      }
      if (scalarTrack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScalarTrack);
      }
      if (vector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Vector);
      }
      if (vectorTrack_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(VectorTrack);
      }
      if (matrix_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Matrix);
      }
      if (Invalid.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Invalid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MeasurementValue other) {
      if (other == null) {
        return;
      }
      if (other.scalar_ != null) {
        if (scalar_ == null) {
          Scalar = new global::Discom.UP.DataContracts.Measurement.Measurement.Scalar();
        }
        Scalar.MergeFrom(other.Scalar);
      }
      if (other.scalarTrack_ != null) {
        if (scalarTrack_ == null) {
          ScalarTrack = new global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrack();
        }
        ScalarTrack.MergeFrom(other.ScalarTrack);
      }
      if (other.vector_ != null) {
        if (vector_ == null) {
          Vector = new global::Discom.UP.DataContracts.Measurement.Measurement.Vector();
        }
        Vector.MergeFrom(other.Vector);
      }
      if (other.vectorTrack_ != null) {
        if (vectorTrack_ == null) {
          VectorTrack = new global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrack();
        }
        VectorTrack.MergeFrom(other.VectorTrack);
      }
      if (other.matrix_ != null) {
        if (matrix_ == null) {
          Matrix = new global::Discom.UP.DataContracts.Measurement.Measurement.Matrix();
        }
        Matrix.MergeFrom(other.Matrix);
      }
      if (other.Invalid.Length != 0) {
        Invalid = other.Invalid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (scalar_ == null) {
              Scalar = new global::Discom.UP.DataContracts.Measurement.Measurement.Scalar();
            }
            input.ReadMessage(Scalar);
            break;
          }
          case 18: {
            if (scalarTrack_ == null) {
              ScalarTrack = new global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrack();
            }
            input.ReadMessage(ScalarTrack);
            break;
          }
          case 26: {
            if (vector_ == null) {
              Vector = new global::Discom.UP.DataContracts.Measurement.Measurement.Vector();
            }
            input.ReadMessage(Vector);
            break;
          }
          case 34: {
            if (vectorTrack_ == null) {
              VectorTrack = new global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrack();
            }
            input.ReadMessage(VectorTrack);
            break;
          }
          case 42: {
            if (matrix_ == null) {
              Matrix = new global::Discom.UP.DataContracts.Measurement.Measurement.Matrix();
            }
            input.ReadMessage(Matrix);
            break;
          }
          case 802: {
            Invalid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (scalar_ == null) {
              Scalar = new global::Discom.UP.DataContracts.Measurement.Measurement.Scalar();
            }
            input.ReadMessage(Scalar);
            break;
          }
          case 18: {
            if (scalarTrack_ == null) {
              ScalarTrack = new global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrack();
            }
            input.ReadMessage(ScalarTrack);
            break;
          }
          case 26: {
            if (vector_ == null) {
              Vector = new global::Discom.UP.DataContracts.Measurement.Measurement.Vector();
            }
            input.ReadMessage(Vector);
            break;
          }
          case 34: {
            if (vectorTrack_ == null) {
              VectorTrack = new global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrack();
            }
            input.ReadMessage(VectorTrack);
            break;
          }
          case 42: {
            if (matrix_ == null) {
              Matrix = new global::Discom.UP.DataContracts.Measurement.Measurement.Matrix();
            }
            input.ReadMessage(Matrix);
            break;
          }
          case 802: {
            Invalid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MeasurementValues : pb::IMessage<MeasurementValues>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MeasurementValues> _parser = new pb::MessageParser<MeasurementValues>(() => new MeasurementValues());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MeasurementValues> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementValues() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementValues(MeasurementValues other) : this() {
      values_ = other.values_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementValues Clone() {
      return new MeasurementValues(this);
    }

    /// <summary>Field number for the "Values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Clavis_MeasurementValue> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Clavis_MeasurementValue.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Clavis_MeasurementValue> values_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Clavis_MeasurementValue>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Clavis_MeasurementValue> Values {
      get { return values_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MeasurementValues);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MeasurementValues other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MeasurementValues other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Position : pb::IMessage<Position>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Position> _parser = new pb::MessageParser<Position>(() => new Position());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Position> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position(Position other) : this() {
      value_ = other.value_;
      unit_ = other.unit_ != null ? other.unit_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Position Clone() {
      return new Position(this);
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 1;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "Unit" field.</summary>
    public const int UnitFieldNumber = 2;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit unit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit Unit {
      get { return unit_; }
      set {
        unit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Position);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Position other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      if (!object.Equals(Unit, other.Unit)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (unit_ != null) hash ^= Unit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Value);
      }
      if (unit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Unit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Value);
      }
      if (unit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Unit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (unit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unit);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Position other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      if (other.unit_ != null) {
        if (unit_ == null) {
          Unit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        Unit.MergeFrom(other.Unit);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Value = input.ReadFloat();
            break;
          }
          case 18: {
            if (unit_ == null) {
              Unit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(Unit);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Value = input.ReadFloat();
            break;
          }
          case 18: {
            if (unit_ == null) {
              Unit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(Unit);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Scalar : pb::IMessage<Scalar>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Scalar> _parser = new pb::MessageParser<Scalar>(() => new Scalar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Scalar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scalar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scalar(Scalar other) : this() {
      value_ = other.value_;
      unit_ = other.unit_ != null ? other.unit_.Clone() : null;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      limits_ = other.limits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scalar Clone() {
      return new Scalar(this);
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 1;
    private float value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "Unit" field.</summary>
    public const int UnitFieldNumber = 2;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit unit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit Unit {
      get { return unit_; }
      set {
        unit_ = value;
      }
    }

    /// <summary>Field number for the "Position" field.</summary>
    public const int PositionFieldNumber = 3;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Position position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Position Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "Limits" field.</summary>
    public const int LimitsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_Single> _repeated_limits_codec
        = pb::FieldCodec.ForMessage(34, global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_Single.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_Single> limits_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_Single>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_Single> Limits {
      get { return limits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Scalar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Scalar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Value, other.Value)) return false;
      if (!object.Equals(Unit, other.Unit)) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if(!limits_.Equals(other.limits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Value);
      if (unit_ != null) hash ^= Unit.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      hash ^= limits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Value != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Value);
      }
      if (unit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Unit);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      limits_.WriteTo(output, _repeated_limits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Value != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Value);
      }
      if (unit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Unit);
      }
      if (position_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Position);
      }
      limits_.WriteTo(ref output, _repeated_limits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0F) {
        size += 1 + 4;
      }
      if (unit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unit);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      size += limits_.CalculateSize(_repeated_limits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Scalar other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0F) {
        Value = other.Value;
      }
      if (other.unit_ != null) {
        if (unit_ == null) {
          Unit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        Unit.MergeFrom(other.Unit);
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Discom.UP.DataContracts.Measurement.Measurement.Position();
        }
        Position.MergeFrom(other.Position);
      }
      limits_.Add(other.limits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Value = input.ReadFloat();
            break;
          }
          case 18: {
            if (unit_ == null) {
              Unit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(Unit);
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Discom.UP.DataContracts.Measurement.Measurement.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 34: {
            limits_.AddEntriesFrom(input, _repeated_limits_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Value = input.ReadFloat();
            break;
          }
          case 18: {
            if (unit_ == null) {
              Unit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(Unit);
            break;
          }
          case 26: {
            if (position_ == null) {
              Position = new global::Discom.UP.DataContracts.Measurement.Measurement.Position();
            }
            input.ReadMessage(Position);
            break;
          }
          case 34: {
            limits_.AddEntriesFrom(ref input, _repeated_limits_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScalarTrack : pb::IMessage<ScalarTrack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScalarTrack> _parser = new pb::MessageParser<ScalarTrack>(() => new ScalarTrack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScalarTrack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScalarTrack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScalarTrack(ScalarTrack other) : this() {
      values_ = other.values_.Clone();
      xUnit_ = other.xUnit_ != null ? other.xUnit_.Clone() : null;
      yUnit_ = other.yUnit_ != null ? other.yUnit_.Clone() : null;
      limits_ = other.limits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScalarTrack Clone() {
      return new ScalarTrack(this);
    }

    /// <summary>Field number for the "Values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint> values_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.ScalarTrackPoint> Values {
      get { return values_; }
    }

    /// <summary>Field number for the "XUnit" field.</summary>
    public const int XUnitFieldNumber = 2;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit xUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit XUnit {
      get { return xUnit_; }
      set {
        xUnit_ = value;
      }
    }

    /// <summary>Field number for the "YUnit" field.</summary>
    public const int YUnitFieldNumber = 3;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit yUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit YUnit {
      get { return yUnit_; }
      set {
        yUnit_ = value;
      }
    }

    /// <summary>Field number for the "Limits" field.</summary>
    public const int LimitsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_ScalarTrackPoint> _repeated_limits_codec
        = pb::FieldCodec.ForMessage(34, global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_ScalarTrackPoint.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_ScalarTrackPoint> limits_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_ScalarTrackPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_ScalarTrackPoint> Limits {
      get { return limits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScalarTrack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScalarTrack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      if (!object.Equals(XUnit, other.XUnit)) return false;
      if (!object.Equals(YUnit, other.YUnit)) return false;
      if(!limits_.Equals(other.limits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (xUnit_ != null) hash ^= XUnit.GetHashCode();
      if (yUnit_ != null) hash ^= YUnit.GetHashCode();
      hash ^= limits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (xUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(XUnit);
      }
      if (yUnit_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(YUnit);
      }
      limits_.WriteTo(output, _repeated_limits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (xUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(XUnit);
      }
      if (yUnit_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(YUnit);
      }
      limits_.WriteTo(ref output, _repeated_limits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (xUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(XUnit);
      }
      if (yUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YUnit);
      }
      size += limits_.CalculateSize(_repeated_limits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScalarTrack other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      if (other.xUnit_ != null) {
        if (xUnit_ == null) {
          XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        XUnit.MergeFrom(other.XUnit);
      }
      if (other.yUnit_ != null) {
        if (yUnit_ == null) {
          YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        YUnit.MergeFrom(other.YUnit);
      }
      limits_.Add(other.limits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
          case 18: {
            if (xUnit_ == null) {
              XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(XUnit);
            break;
          }
          case 26: {
            if (yUnit_ == null) {
              YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(YUnit);
            break;
          }
          case 34: {
            limits_.AddEntriesFrom(input, _repeated_limits_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
          case 18: {
            if (xUnit_ == null) {
              XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(XUnit);
            break;
          }
          case 26: {
            if (yUnit_ == null) {
              YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(YUnit);
            break;
          }
          case 34: {
            limits_.AddEntriesFrom(ref input, _repeated_limits_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ScalarTrackPoint : pb::IMessage<ScalarTrackPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ScalarTrackPoint> _parser = new pb::MessageParser<ScalarTrackPoint>(() => new ScalarTrackPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ScalarTrackPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScalarTrackPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScalarTrackPoint(ScalarTrackPoint other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ScalarTrackPoint Clone() {
      return new ScalarTrackPoint(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ScalarTrackPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ScalarTrackPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ScalarTrackPoint other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Scale : pb::IMessage<Scale>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Scale> _parser = new pb::MessageParser<Scale>(() => new Scale());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Scale> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scale() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scale(Scale other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Scale Clone() {
      return new Scale(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Scale);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Scale other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Scale other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Unit : pb::IMessage<Unit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Unit> _parser = new pb::MessageParser<Unit>(() => new Unit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Unit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unit(Unit other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      exponent_ = other.exponent_;
      power_ = other.power_;
      scale_ = other.scale_ != null ? other.scale_.Clone() : null;
      logRef_ = other.logRef_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Unit Clone() {
      return new Unit(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Measurement.Measurement.UnitId id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.UnitId Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Exponent" field.</summary>
    public const int ExponentFieldNumber = 2;
    private int exponent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Exponent {
      get { return exponent_; }
      set {
        exponent_ = value;
      }
    }

    /// <summary>Field number for the "Power" field.</summary>
    public const int PowerFieldNumber = 3;
    private int power_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Power {
      get { return power_; }
      set {
        power_ = value;
      }
    }

    /// <summary>Field number for the "Scale" field.</summary>
    public const int ScaleFieldNumber = 4;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Scale scale_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Scale Scale {
      get { return scale_; }
      set {
        scale_ = value;
      }
    }

    /// <summary>Field number for the "LogRef" field.</summary>
    public const int LogRefFieldNumber = 5;
    private float logRef_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LogRef {
      get { return logRef_; }
      set {
        logRef_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Unit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Unit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (Exponent != other.Exponent) return false;
      if (Power != other.Power) return false;
      if (!object.Equals(Scale, other.Scale)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LogRef, other.LogRef)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (Exponent != 0) hash ^= Exponent.GetHashCode();
      if (Power != 0) hash ^= Power.GetHashCode();
      if (scale_ != null) hash ^= Scale.GetHashCode();
      if (LogRef != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LogRef);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Exponent != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exponent);
      }
      if (Power != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Power);
      }
      if (scale_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scale);
      }
      if (LogRef != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(LogRef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (Exponent != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Exponent);
      }
      if (Power != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Power);
      }
      if (scale_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scale);
      }
      if (LogRef != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(LogRef);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (Exponent != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Exponent);
      }
      if (Power != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Power);
      }
      if (scale_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scale);
      }
      if (LogRef != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Unit other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Measurement.Measurement.UnitId();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.Exponent != 0) {
        Exponent = other.Exponent;
      }
      if (other.Power != 0) {
        Power = other.Power;
      }
      if (other.scale_ != null) {
        if (scale_ == null) {
          Scale = new global::Discom.UP.DataContracts.Measurement.Measurement.Scale();
        }
        Scale.MergeFrom(other.Scale);
      }
      if (other.LogRef != 0F) {
        LogRef = other.LogRef;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Measurement.Measurement.UnitId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 16: {
            Exponent = input.ReadInt32();
            break;
          }
          case 24: {
            Power = input.ReadInt32();
            break;
          }
          case 34: {
            if (scale_ == null) {
              Scale = new global::Discom.UP.DataContracts.Measurement.Measurement.Scale();
            }
            input.ReadMessage(Scale);
            break;
          }
          case 45: {
            LogRef = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Measurement.Measurement.UnitId();
            }
            input.ReadMessage(Id);
            break;
          }
          case 16: {
            Exponent = input.ReadInt32();
            break;
          }
          case 24: {
            Power = input.ReadInt32();
            break;
          }
          case 34: {
            if (scale_ == null) {
              Scale = new global::Discom.UP.DataContracts.Measurement.Measurement.Scale();
            }
            input.ReadMessage(Scale);
            break;
          }
          case 45: {
            LogRef = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class UnitId : pb::IMessage<UnitId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnitId> _parser = new pb::MessageParser<UnitId>(() => new UnitId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnitId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitId(UnitId other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnitId Clone() {
      return new UnitId(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnitId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnitId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnitId other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Vector : pb::IMessage<Vector>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Vector> _parser = new pb::MessageParser<Vector>(() => new Vector());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Vector> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector(Vector other) : this() {
      values_ = other.values_.Clone();
      xUnit_ = other.xUnit_ != null ? other.xUnit_.Clone() : null;
      yUnit_ = other.yUnit_ != null ? other.yUnit_.Clone() : null;
      xAxisRange_ = other.xAxisRange_ != null ? other.xAxisRange_.Clone() : null;
      limits_ = other.limits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Vector Clone() {
      return new Vector(this);
    }

    /// <summary>Field number for the "Values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> values_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> Values {
      get { return values_; }
    }

    /// <summary>Field number for the "XUnit" field.</summary>
    public const int XUnitFieldNumber = 2;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit xUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit XUnit {
      get { return xUnit_; }
      set {
        xUnit_ = value;
      }
    }

    /// <summary>Field number for the "YUnit" field.</summary>
    public const int YUnitFieldNumber = 3;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit yUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit YUnit {
      get { return yUnit_; }
      set {
        yUnit_ = value;
      }
    }

    /// <summary>Field number for the "XAxisRange" field.</summary>
    public const int XAxisRangeFieldNumber = 4;
    private global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange xAxisRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange XAxisRange {
      get { return xAxisRange_; }
      set {
        xAxisRange_ = value;
      }
    }

    /// <summary>Field number for the "Limits" field.</summary>
    public const int LimitsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorPoint> _repeated_limits_codec
        = pb::FieldCodec.ForMessage(42, global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorPoint.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorPoint> limits_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorPoint> Limits {
      get { return limits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Vector);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Vector other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      if (!object.Equals(XUnit, other.XUnit)) return false;
      if (!object.Equals(YUnit, other.YUnit)) return false;
      if (!object.Equals(XAxisRange, other.XAxisRange)) return false;
      if(!limits_.Equals(other.limits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (xUnit_ != null) hash ^= XUnit.GetHashCode();
      if (yUnit_ != null) hash ^= YUnit.GetHashCode();
      if (xAxisRange_ != null) hash ^= XAxisRange.GetHashCode();
      hash ^= limits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (xUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(XUnit);
      }
      if (yUnit_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(YUnit);
      }
      if (xAxisRange_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(XAxisRange);
      }
      limits_.WriteTo(output, _repeated_limits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (xUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(XUnit);
      }
      if (yUnit_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(YUnit);
      }
      if (xAxisRange_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(XAxisRange);
      }
      limits_.WriteTo(ref output, _repeated_limits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (xUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(XUnit);
      }
      if (yUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YUnit);
      }
      if (xAxisRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(XAxisRange);
      }
      size += limits_.CalculateSize(_repeated_limits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Vector other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      if (other.xUnit_ != null) {
        if (xUnit_ == null) {
          XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        XUnit.MergeFrom(other.XUnit);
      }
      if (other.yUnit_ != null) {
        if (yUnit_ == null) {
          YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        YUnit.MergeFrom(other.YUnit);
      }
      if (other.xAxisRange_ != null) {
        if (xAxisRange_ == null) {
          XAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
        }
        XAxisRange.MergeFrom(other.XAxisRange);
      }
      limits_.Add(other.limits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
          case 18: {
            if (xUnit_ == null) {
              XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(XUnit);
            break;
          }
          case 26: {
            if (yUnit_ == null) {
              YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(YUnit);
            break;
          }
          case 34: {
            if (xAxisRange_ == null) {
              XAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
            }
            input.ReadMessage(XAxisRange);
            break;
          }
          case 42: {
            limits_.AddEntriesFrom(input, _repeated_limits_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
          case 18: {
            if (xUnit_ == null) {
              XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(XUnit);
            break;
          }
          case 26: {
            if (yUnit_ == null) {
              YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(YUnit);
            break;
          }
          case 34: {
            if (xAxisRange_ == null) {
              XAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
            }
            input.ReadMessage(XAxisRange);
            break;
          }
          case 42: {
            limits_.AddEntriesFrom(ref input, _repeated_limits_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VectorPoint : pb::IMessage<VectorPoint>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VectorPoint> _parser = new pb::MessageParser<VectorPoint>(() => new VectorPoint());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VectorPoint> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorPoint() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorPoint(VectorPoint other) : this() {
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorPoint Clone() {
      return new VectorPoint(this);
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 1;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VectorPoint);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VectorPoint other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Y != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Y != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VectorPoint other) {
      if (other == null) {
        return;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Y = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VectorTrack : pb::IMessage<VectorTrack>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VectorTrack> _parser = new pb::MessageParser<VectorTrack>(() => new VectorTrack());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VectorTrack> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorTrack() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorTrack(VectorTrack other) : this() {
      values_ = other.values_.Clone();
      xUnit_ = other.xUnit_ != null ? other.xUnit_.Clone() : null;
      yUnit_ = other.yUnit_ != null ? other.yUnit_.Clone() : null;
      zUnit_ = other.zUnit_ != null ? other.zUnit_.Clone() : null;
      xAxisRange_ = other.xAxisRange_ != null ? other.xAxisRange_.Clone() : null;
      limits_ = other.limits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorTrack Clone() {
      return new VectorTrack(this);
    }

    /// <summary>Field number for the "Values" field.</summary>
    public const int ValuesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement> _repeated_values_codec
        = pb::FieldCodec.ForMessage(10, global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement> values_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorTrackElement> Values {
      get { return values_; }
    }

    /// <summary>Field number for the "XUnit" field.</summary>
    public const int XUnitFieldNumber = 2;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit xUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit XUnit {
      get { return xUnit_; }
      set {
        xUnit_ = value;
      }
    }

    /// <summary>Field number for the "YUnit" field.</summary>
    public const int YUnitFieldNumber = 3;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit yUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit YUnit {
      get { return yUnit_; }
      set {
        yUnit_ = value;
      }
    }

    /// <summary>Field number for the "ZUnit" field.</summary>
    public const int ZUnitFieldNumber = 4;
    private global::Discom.UP.DataContracts.Measurement.Measurement.Unit zUnit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.Unit ZUnit {
      get { return zUnit_; }
      set {
        zUnit_ = value;
      }
    }

    /// <summary>Field number for the "XAxisRange" field.</summary>
    public const int XAxisRangeFieldNumber = 5;
    private global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange xAxisRange_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange XAxisRange {
      get { return xAxisRange_; }
      set {
        xAxisRange_ = value;
      }
    }

    /// <summary>Field number for the "Limits" field.</summary>
    public const int LimitsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorTrackElement> _repeated_limits_codec
        = pb::FieldCodec.ForMessage(50, global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorTrackElement.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorTrackElement> limits_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorTrackElement>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.KeyValuePair_Limit_List_VectorTrackElement> Limits {
      get { return limits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VectorTrack);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VectorTrack other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!values_.Equals(other.values_)) return false;
      if (!object.Equals(XUnit, other.XUnit)) return false;
      if (!object.Equals(YUnit, other.YUnit)) return false;
      if (!object.Equals(ZUnit, other.ZUnit)) return false;
      if (!object.Equals(XAxisRange, other.XAxisRange)) return false;
      if(!limits_.Equals(other.limits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= values_.GetHashCode();
      if (xUnit_ != null) hash ^= XUnit.GetHashCode();
      if (yUnit_ != null) hash ^= YUnit.GetHashCode();
      if (zUnit_ != null) hash ^= ZUnit.GetHashCode();
      if (xAxisRange_ != null) hash ^= XAxisRange.GetHashCode();
      hash ^= limits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      values_.WriteTo(output, _repeated_values_codec);
      if (xUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(XUnit);
      }
      if (yUnit_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(YUnit);
      }
      if (zUnit_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ZUnit);
      }
      if (xAxisRange_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(XAxisRange);
      }
      limits_.WriteTo(output, _repeated_limits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      values_.WriteTo(ref output, _repeated_values_codec);
      if (xUnit_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(XUnit);
      }
      if (yUnit_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(YUnit);
      }
      if (zUnit_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ZUnit);
      }
      if (xAxisRange_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(XAxisRange);
      }
      limits_.WriteTo(ref output, _repeated_limits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += values_.CalculateSize(_repeated_values_codec);
      if (xUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(XUnit);
      }
      if (yUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(YUnit);
      }
      if (zUnit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ZUnit);
      }
      if (xAxisRange_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(XAxisRange);
      }
      size += limits_.CalculateSize(_repeated_limits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VectorTrack other) {
      if (other == null) {
        return;
      }
      values_.Add(other.values_);
      if (other.xUnit_ != null) {
        if (xUnit_ == null) {
          XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        XUnit.MergeFrom(other.XUnit);
      }
      if (other.yUnit_ != null) {
        if (yUnit_ == null) {
          YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        YUnit.MergeFrom(other.YUnit);
      }
      if (other.zUnit_ != null) {
        if (zUnit_ == null) {
          ZUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
        }
        ZUnit.MergeFrom(other.ZUnit);
      }
      if (other.xAxisRange_ != null) {
        if (xAxisRange_ == null) {
          XAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
        }
        XAxisRange.MergeFrom(other.XAxisRange);
      }
      limits_.Add(other.limits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            values_.AddEntriesFrom(input, _repeated_values_codec);
            break;
          }
          case 18: {
            if (xUnit_ == null) {
              XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(XUnit);
            break;
          }
          case 26: {
            if (yUnit_ == null) {
              YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(YUnit);
            break;
          }
          case 34: {
            if (zUnit_ == null) {
              ZUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(ZUnit);
            break;
          }
          case 42: {
            if (xAxisRange_ == null) {
              XAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
            }
            input.ReadMessage(XAxisRange);
            break;
          }
          case 50: {
            limits_.AddEntriesFrom(input, _repeated_limits_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            values_.AddEntriesFrom(ref input, _repeated_values_codec);
            break;
          }
          case 18: {
            if (xUnit_ == null) {
              XUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(XUnit);
            break;
          }
          case 26: {
            if (yUnit_ == null) {
              YUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(YUnit);
            break;
          }
          case 34: {
            if (zUnit_ == null) {
              ZUnit = new global::Discom.UP.DataContracts.Measurement.Measurement.Unit();
            }
            input.ReadMessage(ZUnit);
            break;
          }
          case 42: {
            if (xAxisRange_ == null) {
              XAxisRange = new global::Discom.UP.DataContracts.Measurement.Measurement.AxisRange();
            }
            input.ReadMessage(XAxisRange);
            break;
          }
          case 50: {
            limits_.AddEntriesFrom(ref input, _repeated_limits_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VectorTrackElement : pb::IMessage<VectorTrackElement>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VectorTrackElement> _parser = new pb::MessageParser<VectorTrackElement>(() => new VectorTrackElement());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VectorTrackElement> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Measurement.Measurement.MeasurementReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorTrackElement() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorTrackElement(VectorTrackElement other) : this() {
      z_ = other.z_;
      vectorPoints_ = other.vectorPoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VectorTrackElement Clone() {
      return new VectorTrackElement(this);
    }

    /// <summary>Field number for the "Z" field.</summary>
    public const int ZFieldNumber = 1;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    /// <summary>Field number for the "VectorPoints" field.</summary>
    public const int VectorPointsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> _repeated_vectorPoints_codec
        = pb::FieldCodec.ForMessage(18, global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> vectorPoints_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Measurement.Measurement.VectorPoint> VectorPoints {
      get { return vectorPoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VectorTrackElement);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VectorTrackElement other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      if(!vectorPoints_.Equals(other.vectorPoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      hash ^= vectorPoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Z != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Z);
      }
      vectorPoints_.WriteTo(output, _repeated_vectorPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Z != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Z);
      }
      vectorPoints_.WriteTo(ref output, _repeated_vectorPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Z != 0F) {
        size += 1 + 4;
      }
      size += vectorPoints_.CalculateSize(_repeated_vectorPoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VectorTrackElement other) {
      if (other == null) {
        return;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      vectorPoints_.Add(other.vectorPoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Z = input.ReadFloat();
            break;
          }
          case 18: {
            vectorPoints_.AddEntriesFrom(input, _repeated_vectorPoints_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            Z = input.ReadFloat();
            break;
          }
          case 18: {
            vectorPoints_.AddEntriesFrom(ref input, _repeated_vectorPoints_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
