// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TopologoyModel.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Discom.UP.DataContracts.Maintenance.TopologyModel {

  /// <summary>Holder for reflection information generated from TopologoyModel.proto</summary>
  public static partial class TopologoyModelReflection {

    #region Descriptor
    /// <summary>File descriptor for TopologoyModel.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TopologoyModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRUb3BvbG9nb3lNb2RlbC5wcm90bxIjRGlzY29tLlVQLk1haW50ZW5hbmNl",
            "LlRvcG9sb2d5TW9kZWwaCWJjbC5wcm90byL8AgoLQXJjaGl2ZU5vZGUSFQoC",
            "SWQYASABKAsyCS5iY2wuR3VpZBI/CghCYXNlTm9kZRgCIAEoCzItLkRpc2Nv",
            "bS5VUC5NYWludGVuYW5jZS5Ub3BvbG9neU1vZGVsLkJhc2VOb2RlEhgKEFBy",
            "ZXNlbnRhdGlvblBhdGgYBCABKAkSGgoSUHJlc2VudGF0aW9uUmVwb3J0GAUg",
            "ASgJEh8KF1ByZXNlbnRhdGlvblJlcG9ydFZhbHVlGAYgASgJEmAKGUZpbGVT",
            "dG9yYWdlQ29uZmlndXJhdGlvbnMYByADKAsyPS5EaXNjb20uVVAuTWFpbnRl",
            "bmFuY2UuVG9wb2xvZ3lNb2RlbC5GaWxlU3RvcmFnZUNvbmZpZ3VyYXRpb24S",
            "XAoXUzNTdG9yYWdlQ29uZmlndXJhdGlvbnMYCCADKAsyOy5EaXNjb20uVVAu",
            "TWFpbnRlbmFuY2UuVG9wb2xvZ3lNb2RlbC5TM1N0b3JhZ2VDb25maWd1cmF0",
            "aW9uIlUKCEJhc2VOb2RlEgwKBE5hbWUYASABKAkSOwoIQXBpSG9zdHMYAiAD",
            "KAsyKS5EaXNjb20uVVAuTWFpbnRlbmFuY2UuVG9wb2xvZ3lNb2RlbC5Ib3N0",
            "InwKDUNvbGxlY3Rvck5vZGUSFQoCSWQYASABKAsyCS5iY2wuR3VpZBI/CghC",
            "YXNlTm9kZRgCIAEoCzItLkRpc2NvbS5VUC5NYWludGVuYW5jZS5Ub3BvbG9n",
            "eU1vZGVsLkJhc2VOb2RlEhMKC1NlcnZpY2VOYW1lGAMgASgJIigKDERpc2Nv",
            "bURiVHlwZRIMCgROYW1lGAEgASgJEgoKAklkGAIgASgFItkBCgtGYWN0b3J5",
            "Tm9kZRIVCgJJZBgBIAEoCzIJLmJjbC5HdWlkEj8KCEJhc2VOb2RlGAIgASgL",
            "Mi0uRGlzY29tLlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuQmFzZU5v",
            "ZGUSPAoFTGluZXMYAyADKAsyLS5EaXNjb20uVVAuTWFpbnRlbmFuY2UuVG9w",
            "b2xvZ3lNb2RlbC5MaW5lTm9kZRIaChJDdXN0b21lclJlcG9ydExvZ28YBCAB",
            "KAkSGAoQRGlzY29tUmVwb3J0TG9nbxgFIAEoCSKPAQoYRmlsZVN0b3JhZ2VD",
            "b25maWd1cmF0aW9uEl0KF09iamVjdFN0b3JhZ2VBY2Nlc3NUeXBlGAEgASgL",
            "MjwuRGlzY29tLlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuT2JqZWN0",
            "U3RvcmFnZUFjY2Vzc1R5cGUSFAoMUmVsYXRpdmVQYXRoGAIgASgJIpgBCgRI",
            "b3N0EgwKBE5hbWUYASABKAkSPQoGU2NoZW1lGAIgASgLMi0uRGlzY29tLlVQ",
            "Lk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuUHJvdG9jb2wSQwoKQXBpVmVy",
            "c2lvbhgDIAEoCzIvLkRpc2NvbS5VUC5NYWludGVuYW5jZS5Ub3BvbG9neU1v",
            "ZGVsLlZlcnNpb25EVE8i1gQKCExpbmVOb2RlEhUKAklkGAEgASgLMgkuYmNs",
            "Lkd1aWQSPwoIQmFzZU5vZGUYAiABKAsyLS5EaXNjb20uVVAuTWFpbnRlbmFu",
            "Y2UuVG9wb2xvZ3lNb2RlbC5CYXNlTm9kZRJBCgdBcmNoaXZlGAMgASgLMjAu",
            "RGlzY29tLlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuQXJjaGl2ZU5v",
            "ZGUSRQoJQ29sbGVjdG9yGAQgASgLMjIuRGlzY29tLlVQLk1haW50ZW5hbmNl",
            "LlRvcG9sb2d5TW9kZWwuQ29sbGVjdG9yTm9kZRJGCghSZXN1bHREYhgFIAEo",
            "CzI0LkRpc2NvbS5VUC5NYWludGVuYW5jZS5Ub3BvbG9neU1vZGVsLlNxbFNl",
            "cnZlckRiTm9kZRJCCgdQYXJhbURiGAYgASgLMjEuRGlzY29tLlVQLk1haW50",
            "ZW5hbmNlLlRvcG9sb2d5TW9kZWwuU3FsaXRlRGJOb2RlEj0KBVNvdW5kGAcg",
            "ASgLMi4uRGlzY29tLlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuU291",
            "bmROb2RlElQKEk1lYXN1cmVtZW50U2VydmljZRgIIAEoCzI4LkRpc2NvbS5V",
            "UC5NYWludGVuYW5jZS5Ub3BvbG9neU1vZGVsLk1lYXN1cmVtZW50RGF0YU5v",
            "ZGUSRwoKVGVzdFN0YW5kcxgJIAEoCzIzLkRpc2NvbS5VUC5NYWludGVuYW5j",
            "ZS5Ub3BvbG9neU1vZGVsLlRlc3RTdGFuZHNOb2RlIm0KE01lYXN1cmVtZW50",
            "RGF0YU5vZGUSFQoCSWQYASABKAsyCS5iY2wuR3VpZBI/CghCYXNlTm9kZRgC",
            "IAEoCzItLkRpc2NvbS5VUC5NYWludGVuYW5jZS5Ub3BvbG9neU1vZGVsLkJh",
            "c2VOb2RlIjMKF09iamVjdFN0b3JhZ2VBY2Nlc3NUeXBlEgwKBE5hbWUYASAB",
            "KAkSCgoCSWQYAiABKAUiJAoIUHJvdG9jb2wSDAoETmFtZRgBIAEoCRIKCgJJ",
            "ZBgCIAEoBSLxAQoWUzNTdG9yYWdlQ29uZmlndXJhdGlvbhJdChdPYmplY3RT",
            "dG9yYWdlQWNjZXNzVHlwZRgBIAEoCzI8LkRpc2NvbS5VUC5NYWludGVuYW5j",
            "ZS5Ub3BvbG9neU1vZGVsLk9iamVjdFN0b3JhZ2VBY2Nlc3NUeXBlEhEKCUFj",
            "Y2Vzc0tleRgCIAEoCRISCgpQcml2YXRlS2V5GAMgASgJEhgKEFJlZ2lvblN5",
            "c3RlbU5hbWUYBCABKAkSEgoKQnVja2V0TmFtZRgFIAEoCRIPCgdLZXlQYXRo",
            "GAYgASgJEhIKClNlcnZpY2VVcmwYByABKAkijwEKCVNvdW5kTm9kZRIVCgJJ",
            "ZBgBIAEoCzIJLmJjbC5HdWlkEj8KCEJhc2VOb2RlGAIgASgLMi0uRGlzY29t",
            "LlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuQmFzZU5vZGUSDwoHV2F2",
            "UGF0aBgDIAEoCRIZChFDb21wcmVzc2VkV2F2UGF0aBgEIAEoCSKbAwoPU3Fs",
            "U2VydmVyRGJOb2RlEhUKAklkGAEgASgLMgkuYmNsLkd1aWQSPwoIQmFzZU5v",
            "ZGUYAiABKAsyLS5EaXNjb20uVVAuTWFpbnRlbmFuY2UuVG9wb2xvZ3lNb2Rl",
            "bC5CYXNlTm9kZRIUCgxEYXRhYmFzZU5hbWUYAyABKAkSQQoGRGJUeXBlGAQg",
            "ASgLMjEuRGlzY29tLlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuRGlz",
            "Y29tRGJUeXBlEg4KBlNlcnZlchgFIAEoCRIMCgRVc2VyGAYgASgJEhAKCFBh",
            "c3N3b3JkGAcgASgJEiAKGFVzZVdpbmRvd3NBdXRoZW50aWNhdGlvbhgIIAEo",
            "CBIVCg1Vc2VFbmNyeXB0aW9uGAkgASgIEhIKCkJhY2t1cFBhdGgYCiABKAkS",
            "FgoOQ29ubmVjdFRpbWVvdXQYCyABKAUSQgoJRGJWZXJzaW9uGAwgASgLMi8u",
            "RGlzY29tLlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuVmVyc2lvbkRU",
            "TyLRAgoMU3FsaXRlRGJOb2RlEhUKAklkGAEgASgLMgkuYmNsLkd1aWQSPwoI",
            "QmFzZU5vZGUYAiABKAsyLS5EaXNjb20uVVAuTWFpbnRlbmFuY2UuVG9wb2xv",
            "Z3lNb2RlbC5CYXNlTm9kZRIUCgxEYXRhYmFzZU5hbWUYAyABKAkSQQoGRGJU",
            "eXBlGAQgASgLMjEuRGlzY29tLlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9k",
            "ZWwuRGlzY29tRGJUeXBlEhQKDERhdGFiYXNlUGF0aBgFIAEoCRIMCgRVc2Vy",
            "GAYgASgJEhAKCFBhc3N3b3JkGAcgASgJEhYKDkNvbm5lY3RUaW1lb3V0GAgg",
            "ASgFEkIKCURiVmVyc2lvbhgJIAEoCzIvLkRpc2NvbS5VUC5NYWludGVuYW5j",
            "ZS5Ub3BvbG9neU1vZGVsLlZlcnNpb25EVE8igAEKDVRhc0FseXNlck5vZGUS",
            "FQoCSWQYASABKAsyCS5iY2wuR3VpZBI/CghCYXNlTm9kZRgCIAEoCzItLkRp",
            "c2NvbS5VUC5NYWludGVuYW5jZS5Ub3BvbG9neU1vZGVsLkJhc2VOb2RlEhcK",
            "D0FwcGxpY2F0aW9uUGF0aBgDIAEoCSK0AgoNVGVzdFN0YW5kTm9kZRIVCgJJ",
            "ZBgBIAEoCzIJLmJjbC5HdWlkEj8KCEJhc2VOb2RlGAIgASgLMi0uRGlzY29t",
            "LlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuQmFzZU5vZGUSCgoCSVAY",
            "AyABKAkSDwoHV2F2UGF0aBgEIAEoCRIZChFDb21wcmVzc2VkV2F2UGF0aBgF",
            "IAEoCRJFCglUYXNBbHlzZXIYBiABKAsyMi5EaXNjb20uVVAuTWFpbnRlbmFu",
            "Y2UuVG9wb2xvZ3lNb2RlbC5UYXNBbHlzZXJOb2RlEkwKEVBhcmFtZXRlckRh",
            "dGFiYXNlGAcgASgLMjEuRGlzY29tLlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5",
            "TW9kZWwuU3FsaXRlRGJOb2RlIqwBCg5UZXN0U3RhbmRzTm9kZRIVCgJJZBgB",
            "IAEoCzIJLmJjbC5HdWlkEj8KCEJhc2VOb2RlGAIgASgLMi0uRGlzY29tLlVQ",
            "Lk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuQmFzZU5vZGUSQgoGU3RhbmRz",
            "GAMgAygLMjIuRGlzY29tLlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwu",
            "VGVzdFN0YW5kTm9kZSKsAQoNVG9wb2xvZ3lNb2RlbBIVCgJJZBgBIAEoCzIJ",
            "LmJjbC5HdWlkEj8KCEJhc2VOb2RlGAIgASgLMi0uRGlzY29tLlVQLk1haW50",
            "ZW5hbmNlLlRvcG9sb2d5TW9kZWwuQmFzZU5vZGUSQwoJRmFjdG9yaWVzGAMg",
            "AygLMjAuRGlzY29tLlVQLk1haW50ZW5hbmNlLlRvcG9sb2d5TW9kZWwuRmFj",
            "dG9yeU5vZGUiOQoKVmVyc2lvbkRUTxINCgVNYWpvchgBIAEoBRINCgVNaW5v",
            "chgCIAEoBRINCgVQYXRjaBgDIAEoBUI0qgIxRGlzY29tLlVQLkRhdGFDb250",
            "cmFjdHMuTWFpbnRlbmFuY2UuVG9wb2xvZ3lNb2RlbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.BclReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.ArchiveNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.ArchiveNode.Parser, new[]{ "Id", "BaseNode", "PresentationPath", "PresentationReport", "PresentationReportValue", "FileStorageConfigurations", "S3StorageConfigurations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode.Parser, new[]{ "Name", "ApiHosts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.CollectorNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.CollectorNode.Parser, new[]{ "Id", "BaseNode", "ServiceName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType), global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType.Parser, new[]{ "Name", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.FactoryNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.FactoryNode.Parser, new[]{ "Id", "BaseNode", "Lines", "CustomerReportLogo", "DiscomReportLogo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.FileStorageConfiguration), global::Discom.UP.DataContracts.Maintenance.TopologyModel.FileStorageConfiguration.Parser, new[]{ "ObjectStorageAccessType", "RelativePath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.Host), global::Discom.UP.DataContracts.Maintenance.TopologyModel.Host.Parser, new[]{ "Name", "Scheme", "ApiVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.LineNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.LineNode.Parser, new[]{ "Id", "BaseNode", "Archive", "Collector", "ResultDb", "ParamDb", "Sound", "MeasurementService", "TestStands" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.MeasurementDataNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.MeasurementDataNode.Parser, new[]{ "Id", "BaseNode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType), global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType.Parser, new[]{ "Name", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.Protocol), global::Discom.UP.DataContracts.Maintenance.TopologyModel.Protocol.Parser, new[]{ "Name", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.S3StorageConfiguration), global::Discom.UP.DataContracts.Maintenance.TopologyModel.S3StorageConfiguration.Parser, new[]{ "ObjectStorageAccessType", "AccessKey", "PrivateKey", "RegionSystemName", "BucketName", "KeyPath", "ServiceUrl" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.SoundNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.SoundNode.Parser, new[]{ "Id", "BaseNode", "WavPath", "CompressedWavPath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqlServerDbNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqlServerDbNode.Parser, new[]{ "Id", "BaseNode", "DatabaseName", "DbType", "Server", "User", "Password", "UseWindowsAuthentication", "UseEncryption", "BackupPath", "ConnectTimeout", "DbVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode.Parser, new[]{ "Id", "BaseNode", "DatabaseName", "DbType", "DatabasePath", "User", "Password", "ConnectTimeout", "DbVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.TasAlyserNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.TasAlyserNode.Parser, new[]{ "Id", "BaseNode", "ApplicationPath" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandNode.Parser, new[]{ "Id", "BaseNode", "IP", "WavPath", "CompressedWavPath", "TasAlyser", "ParameterDatabase" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandsNode), global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandsNode.Parser, new[]{ "Id", "BaseNode", "Stands" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologyModel), global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologyModel.Parser, new[]{ "Id", "BaseNode", "Factories" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO), global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO.Parser, new[]{ "Major", "Minor", "Patch" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ArchiveNode : pb::IMessage<ArchiveNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ArchiveNode> _parser = new pb::MessageParser<ArchiveNode>(() => new ArchiveNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ArchiveNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArchiveNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArchiveNode(ArchiveNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      presentationPath_ = other.presentationPath_;
      presentationReport_ = other.presentationReport_;
      presentationReportValue_ = other.presentationReportValue_;
      fileStorageConfigurations_ = other.fileStorageConfigurations_.Clone();
      s3StorageConfigurations_ = other.s3StorageConfigurations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ArchiveNode Clone() {
      return new ArchiveNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "PresentationPath" field.</summary>
    public const int PresentationPathFieldNumber = 4;
    private string presentationPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PresentationPath {
      get { return presentationPath_; }
      set {
        presentationPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PresentationReport" field.</summary>
    public const int PresentationReportFieldNumber = 5;
    private string presentationReport_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PresentationReport {
      get { return presentationReport_; }
      set {
        presentationReport_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PresentationReportValue" field.</summary>
    public const int PresentationReportValueFieldNumber = 6;
    private string presentationReportValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PresentationReportValue {
      get { return presentationReportValue_; }
      set {
        presentationReportValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FileStorageConfigurations" field.</summary>
    public const int FileStorageConfigurationsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Maintenance.TopologyModel.FileStorageConfiguration> _repeated_fileStorageConfigurations_codec
        = pb::FieldCodec.ForMessage(58, global::Discom.UP.DataContracts.Maintenance.TopologyModel.FileStorageConfiguration.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.FileStorageConfiguration> fileStorageConfigurations_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.FileStorageConfiguration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.FileStorageConfiguration> FileStorageConfigurations {
      get { return fileStorageConfigurations_; }
    }

    /// <summary>Field number for the "S3StorageConfigurations" field.</summary>
    public const int S3StorageConfigurationsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Maintenance.TopologyModel.S3StorageConfiguration> _repeated_s3StorageConfigurations_codec
        = pb::FieldCodec.ForMessage(66, global::Discom.UP.DataContracts.Maintenance.TopologyModel.S3StorageConfiguration.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.S3StorageConfiguration> s3StorageConfigurations_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.S3StorageConfiguration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.S3StorageConfiguration> S3StorageConfigurations {
      get { return s3StorageConfigurations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ArchiveNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ArchiveNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if (PresentationPath != other.PresentationPath) return false;
      if (PresentationReport != other.PresentationReport) return false;
      if (PresentationReportValue != other.PresentationReportValue) return false;
      if(!fileStorageConfigurations_.Equals(other.fileStorageConfigurations_)) return false;
      if(!s3StorageConfigurations_.Equals(other.s3StorageConfigurations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      if (PresentationPath.Length != 0) hash ^= PresentationPath.GetHashCode();
      if (PresentationReport.Length != 0) hash ^= PresentationReport.GetHashCode();
      if (PresentationReportValue.Length != 0) hash ^= PresentationReportValue.GetHashCode();
      hash ^= fileStorageConfigurations_.GetHashCode();
      hash ^= s3StorageConfigurations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (PresentationPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PresentationPath);
      }
      if (PresentationReport.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PresentationReport);
      }
      if (PresentationReportValue.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PresentationReportValue);
      }
      fileStorageConfigurations_.WriteTo(output, _repeated_fileStorageConfigurations_codec);
      s3StorageConfigurations_.WriteTo(output, _repeated_s3StorageConfigurations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (PresentationPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PresentationPath);
      }
      if (PresentationReport.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PresentationReport);
      }
      if (PresentationReportValue.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(PresentationReportValue);
      }
      fileStorageConfigurations_.WriteTo(ref output, _repeated_fileStorageConfigurations_codec);
      s3StorageConfigurations_.WriteTo(ref output, _repeated_s3StorageConfigurations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      if (PresentationPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PresentationPath);
      }
      if (PresentationReport.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PresentationReport);
      }
      if (PresentationReportValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PresentationReportValue);
      }
      size += fileStorageConfigurations_.CalculateSize(_repeated_fileStorageConfigurations_codec);
      size += s3StorageConfigurations_.CalculateSize(_repeated_s3StorageConfigurations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ArchiveNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      if (other.PresentationPath.Length != 0) {
        PresentationPath = other.PresentationPath;
      }
      if (other.PresentationReport.Length != 0) {
        PresentationReport = other.PresentationReport;
      }
      if (other.PresentationReportValue.Length != 0) {
        PresentationReportValue = other.PresentationReportValue;
      }
      fileStorageConfigurations_.Add(other.fileStorageConfigurations_);
      s3StorageConfigurations_.Add(other.s3StorageConfigurations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 34: {
            PresentationPath = input.ReadString();
            break;
          }
          case 42: {
            PresentationReport = input.ReadString();
            break;
          }
          case 50: {
            PresentationReportValue = input.ReadString();
            break;
          }
          case 58: {
            fileStorageConfigurations_.AddEntriesFrom(input, _repeated_fileStorageConfigurations_codec);
            break;
          }
          case 66: {
            s3StorageConfigurations_.AddEntriesFrom(input, _repeated_s3StorageConfigurations_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 34: {
            PresentationPath = input.ReadString();
            break;
          }
          case 42: {
            PresentationReport = input.ReadString();
            break;
          }
          case 50: {
            PresentationReportValue = input.ReadString();
            break;
          }
          case 58: {
            fileStorageConfigurations_.AddEntriesFrom(ref input, _repeated_fileStorageConfigurations_codec);
            break;
          }
          case 66: {
            s3StorageConfigurations_.AddEntriesFrom(ref input, _repeated_s3StorageConfigurations_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BaseNode : pb::IMessage<BaseNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BaseNode> _parser = new pb::MessageParser<BaseNode>(() => new BaseNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BaseNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseNode(BaseNode other) : this() {
      name_ = other.name_;
      apiHosts_ = other.apiHosts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BaseNode Clone() {
      return new BaseNode(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ApiHosts" field.</summary>
    public const int ApiHostsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Maintenance.TopologyModel.Host> _repeated_apiHosts_codec
        = pb::FieldCodec.ForMessage(18, global::Discom.UP.DataContracts.Maintenance.TopologyModel.Host.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.Host> apiHosts_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.Host>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.Host> ApiHosts {
      get { return apiHosts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BaseNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BaseNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!apiHosts_.Equals(other.apiHosts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= apiHosts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      apiHosts_.WriteTo(output, _repeated_apiHosts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      apiHosts_.WriteTo(ref output, _repeated_apiHosts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += apiHosts_.CalculateSize(_repeated_apiHosts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BaseNode other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      apiHosts_.Add(other.apiHosts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            apiHosts_.AddEntriesFrom(input, _repeated_apiHosts_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            apiHosts_.AddEntriesFrom(ref input, _repeated_apiHosts_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CollectorNode : pb::IMessage<CollectorNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CollectorNode> _parser = new pb::MessageParser<CollectorNode>(() => new CollectorNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CollectorNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CollectorNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CollectorNode(CollectorNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      serviceName_ = other.serviceName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CollectorNode Clone() {
      return new CollectorNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "ServiceName" field.</summary>
    public const int ServiceNameFieldNumber = 3;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CollectorNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CollectorNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if (ServiceName != other.ServiceName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (ServiceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServiceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (ServiceName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServiceName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CollectorNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            ServiceName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            ServiceName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DiscomDbType : pb::IMessage<DiscomDbType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DiscomDbType> _parser = new pb::MessageParser<DiscomDbType>(() => new DiscomDbType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DiscomDbType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscomDbType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscomDbType(DiscomDbType other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DiscomDbType Clone() {
      return new DiscomDbType(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DiscomDbType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DiscomDbType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DiscomDbType other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FactoryNode : pb::IMessage<FactoryNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FactoryNode> _parser = new pb::MessageParser<FactoryNode>(() => new FactoryNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FactoryNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactoryNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactoryNode(FactoryNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      lines_ = other.lines_.Clone();
      customerReportLogo_ = other.customerReportLogo_;
      discomReportLogo_ = other.discomReportLogo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FactoryNode Clone() {
      return new FactoryNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "Lines" field.</summary>
    public const int LinesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Maintenance.TopologyModel.LineNode> _repeated_lines_codec
        = pb::FieldCodec.ForMessage(26, global::Discom.UP.DataContracts.Maintenance.TopologyModel.LineNode.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.LineNode> lines_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.LineNode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.LineNode> Lines {
      get { return lines_; }
    }

    /// <summary>Field number for the "CustomerReportLogo" field.</summary>
    public const int CustomerReportLogoFieldNumber = 4;
    private string customerReportLogo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CustomerReportLogo {
      get { return customerReportLogo_; }
      set {
        customerReportLogo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DiscomReportLogo" field.</summary>
    public const int DiscomReportLogoFieldNumber = 5;
    private string discomReportLogo_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DiscomReportLogo {
      get { return discomReportLogo_; }
      set {
        discomReportLogo_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FactoryNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FactoryNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if(!lines_.Equals(other.lines_)) return false;
      if (CustomerReportLogo != other.CustomerReportLogo) return false;
      if (DiscomReportLogo != other.DiscomReportLogo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      hash ^= lines_.GetHashCode();
      if (CustomerReportLogo.Length != 0) hash ^= CustomerReportLogo.GetHashCode();
      if (DiscomReportLogo.Length != 0) hash ^= DiscomReportLogo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      lines_.WriteTo(output, _repeated_lines_codec);
      if (CustomerReportLogo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CustomerReportLogo);
      }
      if (DiscomReportLogo.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DiscomReportLogo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      lines_.WriteTo(ref output, _repeated_lines_codec);
      if (CustomerReportLogo.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CustomerReportLogo);
      }
      if (DiscomReportLogo.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DiscomReportLogo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      size += lines_.CalculateSize(_repeated_lines_codec);
      if (CustomerReportLogo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomerReportLogo);
      }
      if (DiscomReportLogo.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiscomReportLogo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FactoryNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      lines_.Add(other.lines_);
      if (other.CustomerReportLogo.Length != 0) {
        CustomerReportLogo = other.CustomerReportLogo;
      }
      if (other.DiscomReportLogo.Length != 0) {
        DiscomReportLogo = other.DiscomReportLogo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            lines_.AddEntriesFrom(input, _repeated_lines_codec);
            break;
          }
          case 34: {
            CustomerReportLogo = input.ReadString();
            break;
          }
          case 42: {
            DiscomReportLogo = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            lines_.AddEntriesFrom(ref input, _repeated_lines_codec);
            break;
          }
          case 34: {
            CustomerReportLogo = input.ReadString();
            break;
          }
          case 42: {
            DiscomReportLogo = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class FileStorageConfiguration : pb::IMessage<FileStorageConfiguration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FileStorageConfiguration> _parser = new pb::MessageParser<FileStorageConfiguration>(() => new FileStorageConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<FileStorageConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileStorageConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileStorageConfiguration(FileStorageConfiguration other) : this() {
      objectStorageAccessType_ = other.objectStorageAccessType_ != null ? other.objectStorageAccessType_.Clone() : null;
      relativePath_ = other.relativePath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public FileStorageConfiguration Clone() {
      return new FileStorageConfiguration(this);
    }

    /// <summary>Field number for the "ObjectStorageAccessType" field.</summary>
    public const int ObjectStorageAccessTypeFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType objectStorageAccessType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType ObjectStorageAccessType {
      get { return objectStorageAccessType_; }
      set {
        objectStorageAccessType_ = value;
      }
    }

    /// <summary>Field number for the "RelativePath" field.</summary>
    public const int RelativePathFieldNumber = 2;
    private string relativePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RelativePath {
      get { return relativePath_; }
      set {
        relativePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as FileStorageConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(FileStorageConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ObjectStorageAccessType, other.ObjectStorageAccessType)) return false;
      if (RelativePath != other.RelativePath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (objectStorageAccessType_ != null) hash ^= ObjectStorageAccessType.GetHashCode();
      if (RelativePath.Length != 0) hash ^= RelativePath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (objectStorageAccessType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObjectStorageAccessType);
      }
      if (RelativePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RelativePath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (objectStorageAccessType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObjectStorageAccessType);
      }
      if (RelativePath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RelativePath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (objectStorageAccessType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectStorageAccessType);
      }
      if (RelativePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelativePath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(FileStorageConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.objectStorageAccessType_ != null) {
        if (objectStorageAccessType_ == null) {
          ObjectStorageAccessType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType();
        }
        ObjectStorageAccessType.MergeFrom(other.ObjectStorageAccessType);
      }
      if (other.RelativePath.Length != 0) {
        RelativePath = other.RelativePath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (objectStorageAccessType_ == null) {
              ObjectStorageAccessType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType();
            }
            input.ReadMessage(ObjectStorageAccessType);
            break;
          }
          case 18: {
            RelativePath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (objectStorageAccessType_ == null) {
              ObjectStorageAccessType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType();
            }
            input.ReadMessage(ObjectStorageAccessType);
            break;
          }
          case 18: {
            RelativePath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Host : pb::IMessage<Host>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Host> _parser = new pb::MessageParser<Host>(() => new Host());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Host> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Host() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Host(Host other) : this() {
      name_ = other.name_;
      scheme_ = other.scheme_ != null ? other.scheme_.Clone() : null;
      apiVersion_ = other.apiVersion_ != null ? other.apiVersion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Host Clone() {
      return new Host(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Scheme" field.</summary>
    public const int SchemeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.Protocol scheme_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.Protocol Scheme {
      get { return scheme_; }
      set {
        scheme_ = value;
      }
    }

    /// <summary>Field number for the "ApiVersion" field.</summary>
    public const int ApiVersionFieldNumber = 3;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO apiVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO ApiVersion {
      get { return apiVersion_; }
      set {
        apiVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Host);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Host other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (!object.Equals(Scheme, other.Scheme)) return false;
      if (!object.Equals(ApiVersion, other.ApiVersion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (scheme_ != null) hash ^= Scheme.GetHashCode();
      if (apiVersion_ != null) hash ^= ApiVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (scheme_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Scheme);
      }
      if (apiVersion_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (scheme_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Scheme);
      }
      if (apiVersion_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ApiVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (scheme_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scheme);
      }
      if (apiVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ApiVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Host other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.scheme_ != null) {
        if (scheme_ == null) {
          Scheme = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.Protocol();
        }
        Scheme.MergeFrom(other.Scheme);
      }
      if (other.apiVersion_ != null) {
        if (apiVersion_ == null) {
          ApiVersion = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO();
        }
        ApiVersion.MergeFrom(other.ApiVersion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (scheme_ == null) {
              Scheme = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.Protocol();
            }
            input.ReadMessage(Scheme);
            break;
          }
          case 26: {
            if (apiVersion_ == null) {
              ApiVersion = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO();
            }
            input.ReadMessage(ApiVersion);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            if (scheme_ == null) {
              Scheme = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.Protocol();
            }
            input.ReadMessage(Scheme);
            break;
          }
          case 26: {
            if (apiVersion_ == null) {
              ApiVersion = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO();
            }
            input.ReadMessage(ApiVersion);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LineNode : pb::IMessage<LineNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LineNode> _parser = new pb::MessageParser<LineNode>(() => new LineNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LineNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LineNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LineNode(LineNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      archive_ = other.archive_ != null ? other.archive_.Clone() : null;
      collector_ = other.collector_ != null ? other.collector_.Clone() : null;
      resultDb_ = other.resultDb_ != null ? other.resultDb_.Clone() : null;
      paramDb_ = other.paramDb_ != null ? other.paramDb_.Clone() : null;
      sound_ = other.sound_ != null ? other.sound_.Clone() : null;
      measurementService_ = other.measurementService_ != null ? other.measurementService_.Clone() : null;
      testStands_ = other.testStands_ != null ? other.testStands_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LineNode Clone() {
      return new LineNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "Archive" field.</summary>
    public const int ArchiveFieldNumber = 3;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.ArchiveNode archive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.ArchiveNode Archive {
      get { return archive_; }
      set {
        archive_ = value;
      }
    }

    /// <summary>Field number for the "Collector" field.</summary>
    public const int CollectorFieldNumber = 4;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.CollectorNode collector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.CollectorNode Collector {
      get { return collector_; }
      set {
        collector_ = value;
      }
    }

    /// <summary>Field number for the "ResultDb" field.</summary>
    public const int ResultDbFieldNumber = 5;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqlServerDbNode resultDb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqlServerDbNode ResultDb {
      get { return resultDb_; }
      set {
        resultDb_ = value;
      }
    }

    /// <summary>Field number for the "ParamDb" field.</summary>
    public const int ParamDbFieldNumber = 6;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode paramDb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode ParamDb {
      get { return paramDb_; }
      set {
        paramDb_ = value;
      }
    }

    /// <summary>Field number for the "Sound" field.</summary>
    public const int SoundFieldNumber = 7;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.SoundNode sound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.SoundNode Sound {
      get { return sound_; }
      set {
        sound_ = value;
      }
    }

    /// <summary>Field number for the "MeasurementService" field.</summary>
    public const int MeasurementServiceFieldNumber = 8;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.MeasurementDataNode measurementService_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.MeasurementDataNode MeasurementService {
      get { return measurementService_; }
      set {
        measurementService_ = value;
      }
    }

    /// <summary>Field number for the "TestStands" field.</summary>
    public const int TestStandsFieldNumber = 9;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandsNode testStands_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandsNode TestStands {
      get { return testStands_; }
      set {
        testStands_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LineNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LineNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if (!object.Equals(Archive, other.Archive)) return false;
      if (!object.Equals(Collector, other.Collector)) return false;
      if (!object.Equals(ResultDb, other.ResultDb)) return false;
      if (!object.Equals(ParamDb, other.ParamDb)) return false;
      if (!object.Equals(Sound, other.Sound)) return false;
      if (!object.Equals(MeasurementService, other.MeasurementService)) return false;
      if (!object.Equals(TestStands, other.TestStands)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      if (archive_ != null) hash ^= Archive.GetHashCode();
      if (collector_ != null) hash ^= Collector.GetHashCode();
      if (resultDb_ != null) hash ^= ResultDb.GetHashCode();
      if (paramDb_ != null) hash ^= ParamDb.GetHashCode();
      if (sound_ != null) hash ^= Sound.GetHashCode();
      if (measurementService_ != null) hash ^= MeasurementService.GetHashCode();
      if (testStands_ != null) hash ^= TestStands.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (archive_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Archive);
      }
      if (collector_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Collector);
      }
      if (resultDb_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResultDb);
      }
      if (paramDb_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParamDb);
      }
      if (sound_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Sound);
      }
      if (measurementService_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MeasurementService);
      }
      if (testStands_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TestStands);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (archive_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Archive);
      }
      if (collector_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Collector);
      }
      if (resultDb_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResultDb);
      }
      if (paramDb_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ParamDb);
      }
      if (sound_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Sound);
      }
      if (measurementService_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(MeasurementService);
      }
      if (testStands_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TestStands);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      if (archive_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Archive);
      }
      if (collector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Collector);
      }
      if (resultDb_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResultDb);
      }
      if (paramDb_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParamDb);
      }
      if (sound_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sound);
      }
      if (measurementService_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeasurementService);
      }
      if (testStands_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestStands);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LineNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      if (other.archive_ != null) {
        if (archive_ == null) {
          Archive = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.ArchiveNode();
        }
        Archive.MergeFrom(other.Archive);
      }
      if (other.collector_ != null) {
        if (collector_ == null) {
          Collector = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.CollectorNode();
        }
        Collector.MergeFrom(other.Collector);
      }
      if (other.resultDb_ != null) {
        if (resultDb_ == null) {
          ResultDb = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqlServerDbNode();
        }
        ResultDb.MergeFrom(other.ResultDb);
      }
      if (other.paramDb_ != null) {
        if (paramDb_ == null) {
          ParamDb = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode();
        }
        ParamDb.MergeFrom(other.ParamDb);
      }
      if (other.sound_ != null) {
        if (sound_ == null) {
          Sound = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SoundNode();
        }
        Sound.MergeFrom(other.Sound);
      }
      if (other.measurementService_ != null) {
        if (measurementService_ == null) {
          MeasurementService = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.MeasurementDataNode();
        }
        MeasurementService.MergeFrom(other.MeasurementService);
      }
      if (other.testStands_ != null) {
        if (testStands_ == null) {
          TestStands = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandsNode();
        }
        TestStands.MergeFrom(other.TestStands);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            if (archive_ == null) {
              Archive = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.ArchiveNode();
            }
            input.ReadMessage(Archive);
            break;
          }
          case 34: {
            if (collector_ == null) {
              Collector = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.CollectorNode();
            }
            input.ReadMessage(Collector);
            break;
          }
          case 42: {
            if (resultDb_ == null) {
              ResultDb = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqlServerDbNode();
            }
            input.ReadMessage(ResultDb);
            break;
          }
          case 50: {
            if (paramDb_ == null) {
              ParamDb = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode();
            }
            input.ReadMessage(ParamDb);
            break;
          }
          case 58: {
            if (sound_ == null) {
              Sound = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SoundNode();
            }
            input.ReadMessage(Sound);
            break;
          }
          case 66: {
            if (measurementService_ == null) {
              MeasurementService = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.MeasurementDataNode();
            }
            input.ReadMessage(MeasurementService);
            break;
          }
          case 74: {
            if (testStands_ == null) {
              TestStands = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandsNode();
            }
            input.ReadMessage(TestStands);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            if (archive_ == null) {
              Archive = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.ArchiveNode();
            }
            input.ReadMessage(Archive);
            break;
          }
          case 34: {
            if (collector_ == null) {
              Collector = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.CollectorNode();
            }
            input.ReadMessage(Collector);
            break;
          }
          case 42: {
            if (resultDb_ == null) {
              ResultDb = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqlServerDbNode();
            }
            input.ReadMessage(ResultDb);
            break;
          }
          case 50: {
            if (paramDb_ == null) {
              ParamDb = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode();
            }
            input.ReadMessage(ParamDb);
            break;
          }
          case 58: {
            if (sound_ == null) {
              Sound = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SoundNode();
            }
            input.ReadMessage(Sound);
            break;
          }
          case 66: {
            if (measurementService_ == null) {
              MeasurementService = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.MeasurementDataNode();
            }
            input.ReadMessage(MeasurementService);
            break;
          }
          case 74: {
            if (testStands_ == null) {
              TestStands = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandsNode();
            }
            input.ReadMessage(TestStands);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MeasurementDataNode : pb::IMessage<MeasurementDataNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MeasurementDataNode> _parser = new pb::MessageParser<MeasurementDataNode>(() => new MeasurementDataNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MeasurementDataNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementDataNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementDataNode(MeasurementDataNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MeasurementDataNode Clone() {
      return new MeasurementDataNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MeasurementDataNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MeasurementDataNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MeasurementDataNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ObjectStorageAccessType : pb::IMessage<ObjectStorageAccessType>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectStorageAccessType> _parser = new pb::MessageParser<ObjectStorageAccessType>(() => new ObjectStorageAccessType());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectStorageAccessType> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectStorageAccessType() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectStorageAccessType(ObjectStorageAccessType other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectStorageAccessType Clone() {
      return new ObjectStorageAccessType(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectStorageAccessType);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectStorageAccessType other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectStorageAccessType other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Protocol : pb::IMessage<Protocol>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Protocol> _parser = new pb::MessageParser<Protocol>(() => new Protocol());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Protocol> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Protocol() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Protocol(Protocol other) : this() {
      name_ = other.name_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Protocol Clone() {
      return new Protocol(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 2;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Protocol);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Protocol other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Id != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Id != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Protocol other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Id = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class S3StorageConfiguration : pb::IMessage<S3StorageConfiguration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<S3StorageConfiguration> _parser = new pb::MessageParser<S3StorageConfiguration>(() => new S3StorageConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<S3StorageConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S3StorageConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S3StorageConfiguration(S3StorageConfiguration other) : this() {
      objectStorageAccessType_ = other.objectStorageAccessType_ != null ? other.objectStorageAccessType_.Clone() : null;
      accessKey_ = other.accessKey_;
      privateKey_ = other.privateKey_;
      regionSystemName_ = other.regionSystemName_;
      bucketName_ = other.bucketName_;
      keyPath_ = other.keyPath_;
      serviceUrl_ = other.serviceUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public S3StorageConfiguration Clone() {
      return new S3StorageConfiguration(this);
    }

    /// <summary>Field number for the "ObjectStorageAccessType" field.</summary>
    public const int ObjectStorageAccessTypeFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType objectStorageAccessType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType ObjectStorageAccessType {
      get { return objectStorageAccessType_; }
      set {
        objectStorageAccessType_ = value;
      }
    }

    /// <summary>Field number for the "AccessKey" field.</summary>
    public const int AccessKeyFieldNumber = 2;
    private string accessKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessKey {
      get { return accessKey_; }
      set {
        accessKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "PrivateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 3;
    private string privateKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RegionSystemName" field.</summary>
    public const int RegionSystemNameFieldNumber = 4;
    private string regionSystemName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RegionSystemName {
      get { return regionSystemName_; }
      set {
        regionSystemName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BucketName" field.</summary>
    public const int BucketNameFieldNumber = 5;
    private string bucketName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BucketName {
      get { return bucketName_; }
      set {
        bucketName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "KeyPath" field.</summary>
    public const int KeyPathFieldNumber = 6;
    private string keyPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KeyPath {
      get { return keyPath_; }
      set {
        keyPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ServiceUrl" field.</summary>
    public const int ServiceUrlFieldNumber = 7;
    private string serviceUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServiceUrl {
      get { return serviceUrl_; }
      set {
        serviceUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as S3StorageConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(S3StorageConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ObjectStorageAccessType, other.ObjectStorageAccessType)) return false;
      if (AccessKey != other.AccessKey) return false;
      if (PrivateKey != other.PrivateKey) return false;
      if (RegionSystemName != other.RegionSystemName) return false;
      if (BucketName != other.BucketName) return false;
      if (KeyPath != other.KeyPath) return false;
      if (ServiceUrl != other.ServiceUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (objectStorageAccessType_ != null) hash ^= ObjectStorageAccessType.GetHashCode();
      if (AccessKey.Length != 0) hash ^= AccessKey.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (RegionSystemName.Length != 0) hash ^= RegionSystemName.GetHashCode();
      if (BucketName.Length != 0) hash ^= BucketName.GetHashCode();
      if (KeyPath.Length != 0) hash ^= KeyPath.GetHashCode();
      if (ServiceUrl.Length != 0) hash ^= ServiceUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (objectStorageAccessType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObjectStorageAccessType);
      }
      if (AccessKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccessKey);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrivateKey);
      }
      if (RegionSystemName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RegionSystemName);
      }
      if (BucketName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BucketName);
      }
      if (KeyPath.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(KeyPath);
      }
      if (ServiceUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ServiceUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (objectStorageAccessType_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ObjectStorageAccessType);
      }
      if (AccessKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccessKey);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PrivateKey);
      }
      if (RegionSystemName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RegionSystemName);
      }
      if (BucketName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BucketName);
      }
      if (KeyPath.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(KeyPath);
      }
      if (ServiceUrl.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ServiceUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (objectStorageAccessType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ObjectStorageAccessType);
      }
      if (AccessKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessKey);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrivateKey);
      }
      if (RegionSystemName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionSystemName);
      }
      if (BucketName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BucketName);
      }
      if (KeyPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyPath);
      }
      if (ServiceUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(S3StorageConfiguration other) {
      if (other == null) {
        return;
      }
      if (other.objectStorageAccessType_ != null) {
        if (objectStorageAccessType_ == null) {
          ObjectStorageAccessType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType();
        }
        ObjectStorageAccessType.MergeFrom(other.ObjectStorageAccessType);
      }
      if (other.AccessKey.Length != 0) {
        AccessKey = other.AccessKey;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      if (other.RegionSystemName.Length != 0) {
        RegionSystemName = other.RegionSystemName;
      }
      if (other.BucketName.Length != 0) {
        BucketName = other.BucketName;
      }
      if (other.KeyPath.Length != 0) {
        KeyPath = other.KeyPath;
      }
      if (other.ServiceUrl.Length != 0) {
        ServiceUrl = other.ServiceUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (objectStorageAccessType_ == null) {
              ObjectStorageAccessType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType();
            }
            input.ReadMessage(ObjectStorageAccessType);
            break;
          }
          case 18: {
            AccessKey = input.ReadString();
            break;
          }
          case 26: {
            PrivateKey = input.ReadString();
            break;
          }
          case 34: {
            RegionSystemName = input.ReadString();
            break;
          }
          case 42: {
            BucketName = input.ReadString();
            break;
          }
          case 50: {
            KeyPath = input.ReadString();
            break;
          }
          case 58: {
            ServiceUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (objectStorageAccessType_ == null) {
              ObjectStorageAccessType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.ObjectStorageAccessType();
            }
            input.ReadMessage(ObjectStorageAccessType);
            break;
          }
          case 18: {
            AccessKey = input.ReadString();
            break;
          }
          case 26: {
            PrivateKey = input.ReadString();
            break;
          }
          case 34: {
            RegionSystemName = input.ReadString();
            break;
          }
          case 42: {
            BucketName = input.ReadString();
            break;
          }
          case 50: {
            KeyPath = input.ReadString();
            break;
          }
          case 58: {
            ServiceUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SoundNode : pb::IMessage<SoundNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SoundNode> _parser = new pb::MessageParser<SoundNode>(() => new SoundNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SoundNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundNode(SoundNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      wavPath_ = other.wavPath_;
      compressedWavPath_ = other.compressedWavPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundNode Clone() {
      return new SoundNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "WavPath" field.</summary>
    public const int WavPathFieldNumber = 3;
    private string wavPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WavPath {
      get { return wavPath_; }
      set {
        wavPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompressedWavPath" field.</summary>
    public const int CompressedWavPathFieldNumber = 4;
    private string compressedWavPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CompressedWavPath {
      get { return compressedWavPath_; }
      set {
        compressedWavPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SoundNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SoundNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if (WavPath != other.WavPath) return false;
      if (CompressedWavPath != other.CompressedWavPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      if (WavPath.Length != 0) hash ^= WavPath.GetHashCode();
      if (CompressedWavPath.Length != 0) hash ^= CompressedWavPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (WavPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WavPath);
      }
      if (CompressedWavPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompressedWavPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (WavPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WavPath);
      }
      if (CompressedWavPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(CompressedWavPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      if (WavPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WavPath);
      }
      if (CompressedWavPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompressedWavPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SoundNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      if (other.WavPath.Length != 0) {
        WavPath = other.WavPath;
      }
      if (other.CompressedWavPath.Length != 0) {
        CompressedWavPath = other.CompressedWavPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            WavPath = input.ReadString();
            break;
          }
          case 34: {
            CompressedWavPath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            WavPath = input.ReadString();
            break;
          }
          case 34: {
            CompressedWavPath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SqlServerDbNode : pb::IMessage<SqlServerDbNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SqlServerDbNode> _parser = new pb::MessageParser<SqlServerDbNode>(() => new SqlServerDbNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SqlServerDbNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SqlServerDbNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SqlServerDbNode(SqlServerDbNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      databaseName_ = other.databaseName_;
      dbType_ = other.dbType_ != null ? other.dbType_.Clone() : null;
      server_ = other.server_;
      user_ = other.user_;
      password_ = other.password_;
      useWindowsAuthentication_ = other.useWindowsAuthentication_;
      useEncryption_ = other.useEncryption_;
      backupPath_ = other.backupPath_;
      connectTimeout_ = other.connectTimeout_;
      dbVersion_ = other.dbVersion_ != null ? other.dbVersion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SqlServerDbNode Clone() {
      return new SqlServerDbNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "DatabaseName" field.</summary>
    public const int DatabaseNameFieldNumber = 3;
    private string databaseName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DatabaseName {
      get { return databaseName_; }
      set {
        databaseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DbType" field.</summary>
    public const int DbTypeFieldNumber = 4;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType dbType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType DbType {
      get { return dbType_; }
      set {
        dbType_ = value;
      }
    }

    /// <summary>Field number for the "Server" field.</summary>
    public const int ServerFieldNumber = 5;
    private string server_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Server {
      get { return server_; }
      set {
        server_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 6;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 7;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UseWindowsAuthentication" field.</summary>
    public const int UseWindowsAuthenticationFieldNumber = 8;
    private bool useWindowsAuthentication_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseWindowsAuthentication {
      get { return useWindowsAuthentication_; }
      set {
        useWindowsAuthentication_ = value;
      }
    }

    /// <summary>Field number for the "UseEncryption" field.</summary>
    public const int UseEncryptionFieldNumber = 9;
    private bool useEncryption_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool UseEncryption {
      get { return useEncryption_; }
      set {
        useEncryption_ = value;
      }
    }

    /// <summary>Field number for the "BackupPath" field.</summary>
    public const int BackupPathFieldNumber = 10;
    private string backupPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BackupPath {
      get { return backupPath_; }
      set {
        backupPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConnectTimeout" field.</summary>
    public const int ConnectTimeoutFieldNumber = 11;
    private int connectTimeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConnectTimeout {
      get { return connectTimeout_; }
      set {
        connectTimeout_ = value;
      }
    }

    /// <summary>Field number for the "DbVersion" field.</summary>
    public const int DbVersionFieldNumber = 12;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO dbVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO DbVersion {
      get { return dbVersion_; }
      set {
        dbVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SqlServerDbNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SqlServerDbNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if (DatabaseName != other.DatabaseName) return false;
      if (!object.Equals(DbType, other.DbType)) return false;
      if (Server != other.Server) return false;
      if (User != other.User) return false;
      if (Password != other.Password) return false;
      if (UseWindowsAuthentication != other.UseWindowsAuthentication) return false;
      if (UseEncryption != other.UseEncryption) return false;
      if (BackupPath != other.BackupPath) return false;
      if (ConnectTimeout != other.ConnectTimeout) return false;
      if (!object.Equals(DbVersion, other.DbVersion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      if (DatabaseName.Length != 0) hash ^= DatabaseName.GetHashCode();
      if (dbType_ != null) hash ^= DbType.GetHashCode();
      if (Server.Length != 0) hash ^= Server.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (UseWindowsAuthentication != false) hash ^= UseWindowsAuthentication.GetHashCode();
      if (UseEncryption != false) hash ^= UseEncryption.GetHashCode();
      if (BackupPath.Length != 0) hash ^= BackupPath.GetHashCode();
      if (ConnectTimeout != 0) hash ^= ConnectTimeout.GetHashCode();
      if (dbVersion_ != null) hash ^= DbVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (DatabaseName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DatabaseName);
      }
      if (dbType_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DbType);
      }
      if (Server.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Server);
      }
      if (User.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(User);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Password);
      }
      if (UseWindowsAuthentication != false) {
        output.WriteRawTag(64);
        output.WriteBool(UseWindowsAuthentication);
      }
      if (UseEncryption != false) {
        output.WriteRawTag(72);
        output.WriteBool(UseEncryption);
      }
      if (BackupPath.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BackupPath);
      }
      if (ConnectTimeout != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ConnectTimeout);
      }
      if (dbVersion_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(DbVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (DatabaseName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DatabaseName);
      }
      if (dbType_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DbType);
      }
      if (Server.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Server);
      }
      if (User.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(User);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Password);
      }
      if (UseWindowsAuthentication != false) {
        output.WriteRawTag(64);
        output.WriteBool(UseWindowsAuthentication);
      }
      if (UseEncryption != false) {
        output.WriteRawTag(72);
        output.WriteBool(UseEncryption);
      }
      if (BackupPath.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(BackupPath);
      }
      if (ConnectTimeout != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(ConnectTimeout);
      }
      if (dbVersion_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(DbVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      if (DatabaseName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatabaseName);
      }
      if (dbType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DbType);
      }
      if (Server.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Server);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (UseWindowsAuthentication != false) {
        size += 1 + 1;
      }
      if (UseEncryption != false) {
        size += 1 + 1;
      }
      if (BackupPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackupPath);
      }
      if (ConnectTimeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConnectTimeout);
      }
      if (dbVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DbVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SqlServerDbNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      if (other.DatabaseName.Length != 0) {
        DatabaseName = other.DatabaseName;
      }
      if (other.dbType_ != null) {
        if (dbType_ == null) {
          DbType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType();
        }
        DbType.MergeFrom(other.DbType);
      }
      if (other.Server.Length != 0) {
        Server = other.Server;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.UseWindowsAuthentication != false) {
        UseWindowsAuthentication = other.UseWindowsAuthentication;
      }
      if (other.UseEncryption != false) {
        UseEncryption = other.UseEncryption;
      }
      if (other.BackupPath.Length != 0) {
        BackupPath = other.BackupPath;
      }
      if (other.ConnectTimeout != 0) {
        ConnectTimeout = other.ConnectTimeout;
      }
      if (other.dbVersion_ != null) {
        if (dbVersion_ == null) {
          DbVersion = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO();
        }
        DbVersion.MergeFrom(other.DbVersion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            DatabaseName = input.ReadString();
            break;
          }
          case 34: {
            if (dbType_ == null) {
              DbType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType();
            }
            input.ReadMessage(DbType);
            break;
          }
          case 42: {
            Server = input.ReadString();
            break;
          }
          case 50: {
            User = input.ReadString();
            break;
          }
          case 58: {
            Password = input.ReadString();
            break;
          }
          case 64: {
            UseWindowsAuthentication = input.ReadBool();
            break;
          }
          case 72: {
            UseEncryption = input.ReadBool();
            break;
          }
          case 82: {
            BackupPath = input.ReadString();
            break;
          }
          case 88: {
            ConnectTimeout = input.ReadInt32();
            break;
          }
          case 98: {
            if (dbVersion_ == null) {
              DbVersion = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO();
            }
            input.ReadMessage(DbVersion);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            DatabaseName = input.ReadString();
            break;
          }
          case 34: {
            if (dbType_ == null) {
              DbType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType();
            }
            input.ReadMessage(DbType);
            break;
          }
          case 42: {
            Server = input.ReadString();
            break;
          }
          case 50: {
            User = input.ReadString();
            break;
          }
          case 58: {
            Password = input.ReadString();
            break;
          }
          case 64: {
            UseWindowsAuthentication = input.ReadBool();
            break;
          }
          case 72: {
            UseEncryption = input.ReadBool();
            break;
          }
          case 82: {
            BackupPath = input.ReadString();
            break;
          }
          case 88: {
            ConnectTimeout = input.ReadInt32();
            break;
          }
          case 98: {
            if (dbVersion_ == null) {
              DbVersion = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO();
            }
            input.ReadMessage(DbVersion);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SqliteDbNode : pb::IMessage<SqliteDbNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SqliteDbNode> _parser = new pb::MessageParser<SqliteDbNode>(() => new SqliteDbNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SqliteDbNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SqliteDbNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SqliteDbNode(SqliteDbNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      databaseName_ = other.databaseName_;
      dbType_ = other.dbType_ != null ? other.dbType_.Clone() : null;
      databasePath_ = other.databasePath_;
      user_ = other.user_;
      password_ = other.password_;
      connectTimeout_ = other.connectTimeout_;
      dbVersion_ = other.dbVersion_ != null ? other.dbVersion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SqliteDbNode Clone() {
      return new SqliteDbNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "DatabaseName" field.</summary>
    public const int DatabaseNameFieldNumber = 3;
    private string databaseName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DatabaseName {
      get { return databaseName_; }
      set {
        databaseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DbType" field.</summary>
    public const int DbTypeFieldNumber = 4;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType dbType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType DbType {
      get { return dbType_; }
      set {
        dbType_ = value;
      }
    }

    /// <summary>Field number for the "DatabasePath" field.</summary>
    public const int DatabasePathFieldNumber = 5;
    private string databasePath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DatabasePath {
      get { return databasePath_; }
      set {
        databasePath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 6;
    private string user_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string User {
      get { return user_; }
      set {
        user_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 7;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConnectTimeout" field.</summary>
    public const int ConnectTimeoutFieldNumber = 8;
    private int connectTimeout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ConnectTimeout {
      get { return connectTimeout_; }
      set {
        connectTimeout_ = value;
      }
    }

    /// <summary>Field number for the "DbVersion" field.</summary>
    public const int DbVersionFieldNumber = 9;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO dbVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO DbVersion {
      get { return dbVersion_; }
      set {
        dbVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SqliteDbNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SqliteDbNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if (DatabaseName != other.DatabaseName) return false;
      if (!object.Equals(DbType, other.DbType)) return false;
      if (DatabasePath != other.DatabasePath) return false;
      if (User != other.User) return false;
      if (Password != other.Password) return false;
      if (ConnectTimeout != other.ConnectTimeout) return false;
      if (!object.Equals(DbVersion, other.DbVersion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      if (DatabaseName.Length != 0) hash ^= DatabaseName.GetHashCode();
      if (dbType_ != null) hash ^= DbType.GetHashCode();
      if (DatabasePath.Length != 0) hash ^= DatabasePath.GetHashCode();
      if (User.Length != 0) hash ^= User.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (ConnectTimeout != 0) hash ^= ConnectTimeout.GetHashCode();
      if (dbVersion_ != null) hash ^= DbVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (DatabaseName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DatabaseName);
      }
      if (dbType_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DbType);
      }
      if (DatabasePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DatabasePath);
      }
      if (User.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(User);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Password);
      }
      if (ConnectTimeout != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ConnectTimeout);
      }
      if (dbVersion_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DbVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (DatabaseName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DatabaseName);
      }
      if (dbType_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(DbType);
      }
      if (DatabasePath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DatabasePath);
      }
      if (User.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(User);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Password);
      }
      if (ConnectTimeout != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ConnectTimeout);
      }
      if (dbVersion_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(DbVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      if (DatabaseName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatabaseName);
      }
      if (dbType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DbType);
      }
      if (DatabasePath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatabasePath);
      }
      if (User.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(User);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (ConnectTimeout != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ConnectTimeout);
      }
      if (dbVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DbVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SqliteDbNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      if (other.DatabaseName.Length != 0) {
        DatabaseName = other.DatabaseName;
      }
      if (other.dbType_ != null) {
        if (dbType_ == null) {
          DbType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType();
        }
        DbType.MergeFrom(other.DbType);
      }
      if (other.DatabasePath.Length != 0) {
        DatabasePath = other.DatabasePath;
      }
      if (other.User.Length != 0) {
        User = other.User;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.ConnectTimeout != 0) {
        ConnectTimeout = other.ConnectTimeout;
      }
      if (other.dbVersion_ != null) {
        if (dbVersion_ == null) {
          DbVersion = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO();
        }
        DbVersion.MergeFrom(other.DbVersion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            DatabaseName = input.ReadString();
            break;
          }
          case 34: {
            if (dbType_ == null) {
              DbType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType();
            }
            input.ReadMessage(DbType);
            break;
          }
          case 42: {
            DatabasePath = input.ReadString();
            break;
          }
          case 50: {
            User = input.ReadString();
            break;
          }
          case 58: {
            Password = input.ReadString();
            break;
          }
          case 64: {
            ConnectTimeout = input.ReadInt32();
            break;
          }
          case 74: {
            if (dbVersion_ == null) {
              DbVersion = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO();
            }
            input.ReadMessage(DbVersion);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            DatabaseName = input.ReadString();
            break;
          }
          case 34: {
            if (dbType_ == null) {
              DbType = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.DiscomDbType();
            }
            input.ReadMessage(DbType);
            break;
          }
          case 42: {
            DatabasePath = input.ReadString();
            break;
          }
          case 50: {
            User = input.ReadString();
            break;
          }
          case 58: {
            Password = input.ReadString();
            break;
          }
          case 64: {
            ConnectTimeout = input.ReadInt32();
            break;
          }
          case 74: {
            if (dbVersion_ == null) {
              DbVersion = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.VersionDTO();
            }
            input.ReadMessage(DbVersion);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TasAlyserNode : pb::IMessage<TasAlyserNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TasAlyserNode> _parser = new pb::MessageParser<TasAlyserNode>(() => new TasAlyserNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TasAlyserNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TasAlyserNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TasAlyserNode(TasAlyserNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      applicationPath_ = other.applicationPath_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TasAlyserNode Clone() {
      return new TasAlyserNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "ApplicationPath" field.</summary>
    public const int ApplicationPathFieldNumber = 3;
    private string applicationPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ApplicationPath {
      get { return applicationPath_; }
      set {
        applicationPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TasAlyserNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TasAlyserNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if (ApplicationPath != other.ApplicationPath) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      if (ApplicationPath.Length != 0) hash ^= ApplicationPath.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (ApplicationPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ApplicationPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (ApplicationPath.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ApplicationPath);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      if (ApplicationPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ApplicationPath);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TasAlyserNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      if (other.ApplicationPath.Length != 0) {
        ApplicationPath = other.ApplicationPath;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            ApplicationPath = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            ApplicationPath = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TestStandNode : pb::IMessage<TestStandNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestStandNode> _parser = new pb::MessageParser<TestStandNode>(() => new TestStandNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TestStandNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestStandNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestStandNode(TestStandNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      iP_ = other.iP_;
      wavPath_ = other.wavPath_;
      compressedWavPath_ = other.compressedWavPath_;
      tasAlyser_ = other.tasAlyser_ != null ? other.tasAlyser_.Clone() : null;
      parameterDatabase_ = other.parameterDatabase_ != null ? other.parameterDatabase_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestStandNode Clone() {
      return new TestStandNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "IP" field.</summary>
    public const int IPFieldNumber = 3;
    private string iP_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IP {
      get { return iP_; }
      set {
        iP_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "WavPath" field.</summary>
    public const int WavPathFieldNumber = 4;
    private string wavPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WavPath {
      get { return wavPath_; }
      set {
        wavPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CompressedWavPath" field.</summary>
    public const int CompressedWavPathFieldNumber = 5;
    private string compressedWavPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CompressedWavPath {
      get { return compressedWavPath_; }
      set {
        compressedWavPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "TasAlyser" field.</summary>
    public const int TasAlyserFieldNumber = 6;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.TasAlyserNode tasAlyser_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.TasAlyserNode TasAlyser {
      get { return tasAlyser_; }
      set {
        tasAlyser_ = value;
      }
    }

    /// <summary>Field number for the "ParameterDatabase" field.</summary>
    public const int ParameterDatabaseFieldNumber = 7;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode parameterDatabase_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode ParameterDatabase {
      get { return parameterDatabase_; }
      set {
        parameterDatabase_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TestStandNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TestStandNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if (IP != other.IP) return false;
      if (WavPath != other.WavPath) return false;
      if (CompressedWavPath != other.CompressedWavPath) return false;
      if (!object.Equals(TasAlyser, other.TasAlyser)) return false;
      if (!object.Equals(ParameterDatabase, other.ParameterDatabase)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      if (IP.Length != 0) hash ^= IP.GetHashCode();
      if (WavPath.Length != 0) hash ^= WavPath.GetHashCode();
      if (CompressedWavPath.Length != 0) hash ^= CompressedWavPath.GetHashCode();
      if (tasAlyser_ != null) hash ^= TasAlyser.GetHashCode();
      if (parameterDatabase_ != null) hash ^= ParameterDatabase.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (IP.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IP);
      }
      if (WavPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WavPath);
      }
      if (CompressedWavPath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CompressedWavPath);
      }
      if (tasAlyser_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TasAlyser);
      }
      if (parameterDatabase_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ParameterDatabase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      if (IP.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(IP);
      }
      if (WavPath.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(WavPath);
      }
      if (CompressedWavPath.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CompressedWavPath);
      }
      if (tasAlyser_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TasAlyser);
      }
      if (parameterDatabase_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ParameterDatabase);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      if (IP.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IP);
      }
      if (WavPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WavPath);
      }
      if (CompressedWavPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompressedWavPath);
      }
      if (tasAlyser_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TasAlyser);
      }
      if (parameterDatabase_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ParameterDatabase);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TestStandNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      if (other.IP.Length != 0) {
        IP = other.IP;
      }
      if (other.WavPath.Length != 0) {
        WavPath = other.WavPath;
      }
      if (other.CompressedWavPath.Length != 0) {
        CompressedWavPath = other.CompressedWavPath;
      }
      if (other.tasAlyser_ != null) {
        if (tasAlyser_ == null) {
          TasAlyser = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.TasAlyserNode();
        }
        TasAlyser.MergeFrom(other.TasAlyser);
      }
      if (other.parameterDatabase_ != null) {
        if (parameterDatabase_ == null) {
          ParameterDatabase = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode();
        }
        ParameterDatabase.MergeFrom(other.ParameterDatabase);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            IP = input.ReadString();
            break;
          }
          case 34: {
            WavPath = input.ReadString();
            break;
          }
          case 42: {
            CompressedWavPath = input.ReadString();
            break;
          }
          case 50: {
            if (tasAlyser_ == null) {
              TasAlyser = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.TasAlyserNode();
            }
            input.ReadMessage(TasAlyser);
            break;
          }
          case 58: {
            if (parameterDatabase_ == null) {
              ParameterDatabase = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode();
            }
            input.ReadMessage(ParameterDatabase);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            IP = input.ReadString();
            break;
          }
          case 34: {
            WavPath = input.ReadString();
            break;
          }
          case 42: {
            CompressedWavPath = input.ReadString();
            break;
          }
          case 50: {
            if (tasAlyser_ == null) {
              TasAlyser = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.TasAlyserNode();
            }
            input.ReadMessage(TasAlyser);
            break;
          }
          case 58: {
            if (parameterDatabase_ == null) {
              ParameterDatabase = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.SqliteDbNode();
            }
            input.ReadMessage(ParameterDatabase);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TestStandsNode : pb::IMessage<TestStandsNode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestStandsNode> _parser = new pb::MessageParser<TestStandsNode>(() => new TestStandsNode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TestStandsNode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestStandsNode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestStandsNode(TestStandsNode other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      stands_ = other.stands_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestStandsNode Clone() {
      return new TestStandsNode(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "Stands" field.</summary>
    public const int StandsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandNode> _repeated_stands_codec
        = pb::FieldCodec.ForMessage(26, global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandNode.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandNode> stands_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandNode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.TestStandNode> Stands {
      get { return stands_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TestStandsNode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TestStandsNode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if(!stands_.Equals(other.stands_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      hash ^= stands_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      stands_.WriteTo(output, _repeated_stands_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      stands_.WriteTo(ref output, _repeated_stands_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      size += stands_.CalculateSize(_repeated_stands_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TestStandsNode other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      stands_.Add(other.stands_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            stands_.AddEntriesFrom(input, _repeated_stands_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            stands_.AddEntriesFrom(ref input, _repeated_stands_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TopologyModel : pb::IMessage<TopologyModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TopologyModel> _parser = new pb::MessageParser<TopologyModel>(() => new TopologyModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TopologyModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopologyModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopologyModel(TopologyModel other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      baseNode_ = other.baseNode_ != null ? other.baseNode_.Clone() : null;
      factories_ = other.factories_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TopologyModel Clone() {
      return new TopologyModel(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid id_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "BaseNode" field.</summary>
    public const int BaseNodeFieldNumber = 2;
    private global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode baseNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode BaseNode {
      get { return baseNode_; }
      set {
        baseNode_ = value;
      }
    }

    /// <summary>Field number for the "Factories" field.</summary>
    public const int FactoriesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Discom.UP.DataContracts.Maintenance.TopologyModel.FactoryNode> _repeated_factories_codec
        = pb::FieldCodec.ForMessage(26, global::Discom.UP.DataContracts.Maintenance.TopologyModel.FactoryNode.Parser);
    private readonly pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.FactoryNode> factories_ = new pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.FactoryNode>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Discom.UP.DataContracts.Maintenance.TopologyModel.FactoryNode> Factories {
      get { return factories_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TopologyModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TopologyModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(BaseNode, other.BaseNode)) return false;
      if(!factories_.Equals(other.factories_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (baseNode_ != null) hash ^= BaseNode.GetHashCode();
      hash ^= factories_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      factories_.WriteTo(output, _repeated_factories_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (baseNode_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BaseNode);
      }
      factories_.WriteTo(ref output, _repeated_factories_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (baseNode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BaseNode);
      }
      size += factories_.CalculateSize(_repeated_factories_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TopologyModel other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.baseNode_ != null) {
        if (baseNode_ == null) {
          BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
        }
        BaseNode.MergeFrom(other.BaseNode);
      }
      factories_.Add(other.factories_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            factories_.AddEntriesFrom(input, _repeated_factories_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (id_ == null) {
              Id = new global::Discom.UP.DataContracts.Maintenance.ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Id);
            break;
          }
          case 18: {
            if (baseNode_ == null) {
              BaseNode = new global::Discom.UP.DataContracts.Maintenance.TopologyModel.BaseNode();
            }
            input.ReadMessage(BaseNode);
            break;
          }
          case 26: {
            factories_.AddEntriesFrom(ref input, _repeated_factories_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class VersionDTO : pb::IMessage<VersionDTO>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VersionDTO> _parser = new pb::MessageParser<VersionDTO>(() => new VersionDTO());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VersionDTO> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Discom.UP.DataContracts.Maintenance.TopologyModel.TopologoyModelReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VersionDTO() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VersionDTO(VersionDTO other) : this() {
      major_ = other.major_;
      minor_ = other.minor_;
      patch_ = other.patch_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VersionDTO Clone() {
      return new VersionDTO(this);
    }

    /// <summary>Field number for the "Major" field.</summary>
    public const int MajorFieldNumber = 1;
    private int major_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Major {
      get { return major_; }
      set {
        major_ = value;
      }
    }

    /// <summary>Field number for the "Minor" field.</summary>
    public const int MinorFieldNumber = 2;
    private int minor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Minor {
      get { return minor_; }
      set {
        minor_ = value;
      }
    }

    /// <summary>Field number for the "Patch" field.</summary>
    public const int PatchFieldNumber = 3;
    private int patch_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Patch {
      get { return patch_; }
      set {
        patch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VersionDTO);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VersionDTO other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Major != other.Major) return false;
      if (Minor != other.Minor) return false;
      if (Patch != other.Patch) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Major != 0) hash ^= Major.GetHashCode();
      if (Minor != 0) hash ^= Minor.GetHashCode();
      if (Patch != 0) hash ^= Patch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Major != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Major);
      }
      if (Minor != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Minor);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Major != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Major);
      }
      if (Minor != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Minor);
      }
      if (Patch != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Patch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Major != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Major);
      }
      if (Minor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Minor);
      }
      if (Patch != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Patch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VersionDTO other) {
      if (other == null) {
        return;
      }
      if (other.Major != 0) {
        Major = other.Major;
      }
      if (other.Minor != 0) {
        Minor = other.Minor;
      }
      if (other.Patch != 0) {
        Patch = other.Patch;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Major = input.ReadInt32();
            break;
          }
          case 16: {
            Minor = input.ReadInt32();
            break;
          }
          case 24: {
            Patch = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Major = input.ReadInt32();
            break;
          }
          case 16: {
            Minor = input.ReadInt32();
            break;
          }
          case 24: {
            Patch = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
